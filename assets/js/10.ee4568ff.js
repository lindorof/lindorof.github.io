(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{442:function(s,t,a){s.exports=a.p+"assets/img/01.8f436573.jpg"},443:function(s,t,a){s.exports=a.p+"assets/img/02.34d39735.jpg"},486:function(s,t,a){"use strict";a.r(t);var n=a(27),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"从内存模型分析-c-的面向对象机制"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#从内存模型分析-c-的面向对象机制"}},[s._v("#")]),s._v(" 从内存模型分析 C++ 的面向对象机制")]),s._v(" "),n("h2",{attrs:{id:"前言"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[s._v("#")]),s._v(" 前言")]),s._v(" "),n("blockquote",[n("ul",[n("li",[n("em",[s._v("这是一篇循序渐进的文章，从简单开始，到后续讨论的内容变得逐渐复杂，而背后的规则却变得越来越简单和清晰。想起一句话："),n("code",[s._v("山高月小，水落石出。")])])]),s._v(" "),n("li",[n("em",[s._v("另外，口头表达问题容易，写文章不易。因为写文章需要梳理、沉淀、并确保逻辑正确，且还需要考虑图示、规则总结；")])])])]),s._v(" "),n("p",[s._v("要测试这些内存模型机制，可以自行编写测试程序来验证，同时，在VS中也提供了分析手段：打开VS的命令提示行工具，使用如下命令：")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[s._v("cl "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("filename"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(".cpp /d1reportSingleClassLayout"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("className"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("例如，代码文件是 "),n("code",[s._v("Test.cpp")]),s._v(" ，该 cpp 内的类名是 "),n("code",[s._v("CTest")]),s._v(" ，则命令如下：")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[s._v("cl Test.cpp /d1reportSingleClassLayoutCTest\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("注意，"),n("code",[s._v("[className]")]),s._v(" 前面没有空格。")]),s._v(" "),n("h2",{attrs:{id:"c-的内存区域分类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#c-的内存区域分类"}},[s._v("#")]),s._v(" C 的内存区域分类")]),s._v(" "),n("p",[s._v("C 的内存分为 4 个区，当然，也可能按照存储的内容不同，细分描述为更多的区，或者对于某个区，可以细分出更多的类型，但从运行的角度来看，用 4 个区来描述已足够。")]),s._v(" "),n("blockquote",[n("p",[s._v("4 个分区如下：")])]),s._v(" "),n("ul",[n("li",[s._v("全局存储区：全局变量、静态变量、常量区（例如 "),n("code",[s._v('char* s = "abc"')]),s._v(" 这种字符串常量，注意不是指 "),n("code",[s._v("const")]),s._v(" 修饰的变量）；")]),s._v(" "),n("li",[s._v("栈（"),n("em",[n("strong",[s._v("Stack")])]),s._v("）：由编译器在需要时自动分配，不需要时自动清理的区域。主要是函数的参数、函数的局部变量、函数内通过代码块形成的局部生存区域；")]),s._v(" "),n("li",[s._v("堆（"),n("em",[n("strong",[s._v("Heap")])]),s._v("）：由程序员在需要时手动分配，不需要时手动释放的区域，如果不释放，则在程序退出时 OS 自动释放；")]),s._v(" "),n("li",[s._v("代码区：存放函数代码。代码区包括操作码和操作数的地址，而操作数的地址则涉及到全局存储区、堆区等；如果涉及到局部数据，则先在栈区分配空间，然后引用栈区地址；如果是立即数（即具体的数值，例如 8 ），则直接包含在代码中；另外，函数本身也有地址，也就是函数在代码区的地址；")])]),s._v(" "),n("blockquote",[n("p",[s._v("在一个程序运行时，上述内存区域是有分布和排列的，但针对不同的操作系统、不同的编译器，具体内存分布排列不在此文中研究，因为清楚认识到内存区域的分类已经足够了。")])]),s._v(" "),n("p",[s._v("下面这段代码来分别说明各个内存区域的使用：")]),s._v(" "),n("div",{staticClass:"language-c line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//ga在全局区域")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" ga "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//gp在全局区域")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("gp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("funcTest")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//b在栈区")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//1是立即数，直接包含在代码中")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" b "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//c在全局区，不会因为函数的结束而被销毁")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" c "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//s在栈区")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('//"abc"常量在全局区')]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"abc"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//p3在栈区")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('//"123456"常量在全局区')]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("p "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"123456"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//p1、p2在栈区")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("p1，"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("p2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//分配得到的10个字节在堆区")]),s._v("\n    p1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("malloc")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//分配得到的20个字节在堆区")]),s._v("\n    p2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("malloc")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//释放p1所指向的堆区的10个字节")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//但p1本身所占用的内存由栈区自动释放")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("free")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("p1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//释放p2所指向的堆区的20个字节")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//但p2本身所占用的内存由栈区自动释放")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("free")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("p2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br")])]),n("p",[s._v("下面的示意图反应了内存区域的关系，只是示意图，并不严谨：")]),s._v(" "),n("p",[n("img",{attrs:{src:a(442),alt:"pic"}})]),s._v(" "),n("h2",{attrs:{id:"c-面向对象-封装"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#c-面向对象-封装"}},[s._v("#")]),s._v(" C++ 面向对象 - 封装")]),s._v(" "),n("h3",{attrs:{id:"内存区域分类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#内存区域分类"}},[s._v("#")]),s._v(" 内存区域分类")]),s._v(" "),n("p",[s._v("C++ 的内存区域分类与 C 的共同点：")]),s._v(" "),n("ul",[n("li",[s._v("虽然在 C 中只有变量的概念，但 C++ 有对象的概念")]),s._v(" "),n("li",[s._v("但是对象本身也是一个变量，只是对象内部又包含多个变量，就像 "),n("code",[s._v("struct")]),s._v(" 一样")])]),s._v(" "),n("p",[s._v("C++ 的内存区域分类与 C 的差异点：")]),s._v(" "),n("ul",[n("li",[s._v("全局存储区包括类中的静态变量，也就是说，类中的静态变量也是在全局存储区，并不在类对象本身的空间内；另外，可能还包括对象的类型信息（可能针对编译器的优化会有差异），即通过 "),n("code",[s._v("type_id")]),s._v(" 获取到的对象的 "),n("code",[s._v("type_info")]),s._v(" 结构体信息；")]),s._v(" "),n("li",[s._v("栈（"),n("em",[n("strong",[s._v("Stack")])]),s._v("）区是一样的，只是对 C++ 来说，类对象可能在栈区，而对象内部的变量可能又涉及到堆区内存；")]),s._v(" "),n("li",[s._v("堆（"),n("em",[n("strong",[s._v("Heap")])]),s._v("）区是一样的，只是对 C++ 来说，类对象可能分配在堆区，同时对象内部的变量也涉及到堆区内存；")]),s._v(" "),n("li",[s._v("代码区存放函数代码，包括全局函数代码，以及类成员函数代码，对 C++ 来说，类的方法是不包含在对象本身的空间内的；")])]),s._v(" "),n("p",[s._v("因此在 C++ 中，使用类进行封装以后，对象的内存示意图如下：")]),s._v(" "),n("p",[n("img",{attrs:{src:a(443),alt:"pic"}})]),s._v(" "),n("p",[s._v("从上面 C++ 的对象内存示意图可知：")]),s._v(" "),n("ol",[n("li",[s._v("类的方法不属于对象本身的空间，无论是静态/非静态的成员方法；")]),s._v(" "),n("li",[s._v("类的静态变量不属于对象本身的空间，而是在全局区域存储的；")]),s._v(" "),n("li",[s._v("全局区域可能还包含对象的 "),n("code",[s._v("type_info")]),s._v(" 信息，该信息可通过 "),n("code",[s._v("typeid")]),s._v(" 关键字获得，类似 "),n("code",[s._v("this")]),s._v(" 指针的效果，该信息可能与编译器有关系；")]),s._v(" "),n("li",[s._v("全局区当然还有全局变量、常量等信息，与C是一致的；")]),s._v(" "),n("li",[s._v("类对象本身的空间只包括 "),n("em",[n("strong",[s._v("非静态")])]),s._v(" 的成员变量空间；")]),s._v(" "),n("li",[s._v("其实类对象中可能还会有 "),n("code",[s._v("vptr")]),s._v(" 指针，该示意图上未表示出来，与 "),n("code",[s._v("virtual")]),s._v(" 成员函数有关系，后续会详细讲解；")]),s._v(" "),n("li",[s._v("类对象的存储位置取决于定义的方式，对象空间可能分配在栈区，也可能分配在堆区；")]),s._v(" "),n("li",[s._v("类对象内部的变量可能还会分配并引用其它空间（例如指针所指向的空间），对于一个对象本身来说，其内部变量所分配和引用的空间只会有两个位置：对象本身的空间、堆区\n"),n("ul",[n("li",[s._v("例如，对象内部有 "),n("code",[s._v("char s[10]")]),s._v(" ，那么这 10 个字节的空间是随对象本身的空间一起分配的；")]),s._v(" "),n("li",[s._v("例如，对象内部有 "),n("code",[s._v("char* s=(char*)malloc(10)")]),s._v(" ，那么这 10 个字节的空间是分配在堆上的，对象本身的空间并不包括堆上的这 10 个字节；")])])]),s._v(" "),n("li",[s._v("可以推论得出：可能对象分配在栈区或堆区，同时对象内部的变量引用了堆区的内存；但无论怎样，对象内部的变量都不可能引用到栈区的其它内存（对象本身的空间除外）；")])]),s._v(" "),n("h3",{attrs:{id:"对象空间计算"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#对象空间计算"}},[s._v("#")]),s._v(" 对象空间计算")]),s._v(" "),n("blockquote",[n("p",[s._v("对应的，C++ 的对象的空间大小使用 "),n("code",[s._v("sizeof")]),s._v(" 可以计算出来，分别举例说明如下。当然，"),n("code",[s._v("sizeof")]),s._v(" 运算符本身深度剖析后也可以写一篇文章出来讲解，就不在本文讲了。")])]),s._v(" "),n("p",[s._v("举例：大小是 4 ，因为只有一个 "),n("code",[s._v("int")]),s._v(" ；")]),s._v(" "),n("div",{staticClass:"language-cpp line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Test")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("    \n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("举例：大小是 4 ，因为代码区域是单独存放的；")]),s._v(" "),n("div",{staticClass:"language-cpp line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Test")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("    \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("f1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("f2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[s._v("举例：大小是 10 ；")]),s._v(" "),n("div",{staticClass:"language-cpp line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Test")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("举例：大小是 4 ，只包含指针本身的大小，而指针指向的区域在堆区；")]),s._v(" "),n("div",{staticClass:"language-cpp line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Test")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" s "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("malloc")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("举例：大小是 4 ，因为静态变量在全局区域存储；")]),s._v(" "),n("div",{staticClass:"language-cpp line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Test")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("举例：大小是 1 ，编译器一般为空类分配 1 个字节的空间；")]),s._v(" "),n("div",{staticClass:"language-cpp line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Test")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("对上述举例需要特殊说明如下：")]),s._v(" "),n("ol",[n("li",[s._v("其实对象中可能还会包含 "),n("code",[s._v("vptr")]),s._v(" 指针，如果涉及到 "),n("code",[s._v("virtual")]),s._v(" 函数的话，因为是指针，所以 "),n("code",[s._v("vptr")]),s._v(" 占 4 个字节大小，后续再详细讲解 "),n("code",[s._v("vptr")]),s._v(" ；")]),s._v(" "),n("li",[s._v("与编译器的优化有关系，可能存在对齐的问题，具体可深究 "),n("code",[s._v("sizeof")]),s._v(" 运算符，涉及到 "),n("code",[s._v("#pragma")]),s._v(" ；")]),s._v(" "),n("li",[s._v("上述讨论都是基于 32 位系统，一个 "),n("code",[s._v("int")]),s._v(" 是 4 个字节，一个指针是 4 个字节；而 64 位系统则对应的是 8 个字节；")])]),s._v(" "),n("h3",{attrs:{id:"对象方法调用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#对象方法调用"}},[s._v("#")]),s._v(" 对象方法调用")]),s._v(" "),n("p",[s._v("现在再说说 C++ 对象的方法调用。虽然 C++ 面向对象进行了类的封装，类中会有成员方法，所以一般调用方法如下：")]),s._v(" "),n("div",{staticClass:"language-cpp line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//调用对象的成员方法")]),s._v("\nc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("func")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//调用类的静态方法")]),s._v("\nClass1"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("::")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("func_static")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("那么，上述基于对象或类的调用方式实际是由编译器转换为 C 的调用方式的，只是在方法内默默增加了对象参数，而对于静态方法来说，就不涉及到对象参数：")]),s._v(" "),n("div",{staticClass:"language-cpp line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//调用对象的成员方法")]),s._v("\nClass1"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("::")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("func")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//调用类的静态方法")]),s._v("\nClass1"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("::")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("func_static")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h2",{attrs:{id:"c-面向对象-重载"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#c-面向对象-重载"}},[s._v("#")]),s._v(" C++ 面向对象 - 重载")]),s._v(" "),n("blockquote",[n("p",[s._v("重载是C++的特性，C语言没有重载机制。")])]),s._v(" "),n("p",[s._v("何为重载：")]),s._v(" "),n("ol",[n("li",[s._v("在同一个作用域内的方法，例如同一个命名空间内的全局方法，或者同一个类内部的成员方法；")]),s._v(" "),n("li",[s._v("注意，同一个类内只有一个作用域，即「类内部」，而不区分 "),n("code",[s._v("public/protected/private")]),s._v(" ；")]),s._v(" "),n("li",[s._v("方法名称相同，但参数不同（参数个数，参数类型等），即为重载；")]),s._v(" "),n("li",[s._v("重载不考虑返回值，因此，如果方法名称和参数都相同，只有返回值不同，则编译错误；")])]),s._v(" "),n("p",[s._v("重载的原理：")]),s._v(" "),n("ol",[n("li",[s._v("重载是一种静态多态；")]),s._v(" "),n("li",[s._v("静态多态的意思是编译期间的多态；")]),s._v(" "),n("li",[s._v("因此重载的本质是编译器对重载函数进行了重命名；")]),s._v(" "),n("li",[s._v("重命名的规则随编译器而不同；")])]),s._v(" "),n("p",[s._v("重载举例：")]),s._v(" "),n("div",{staticClass:"language-cpp line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Test")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//下面三个函数都是重载")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("func")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("func")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("func")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v(" d"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//下面这个函数编译错误")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("func")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("h2",{attrs:{id:"c-面向对象-继承"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#c-面向对象-继承"}},[s._v("#")]),s._v(" C++ 面向对象 - 继承")]),s._v(" "),n("p",[s._v("C++ 的继承机制比较复杂：")]),s._v(" "),n("ul",[n("li",[s._v("除了单继承以外，还涉及到多继承")]),s._v(" "),n("li",[s._v("而由于多继承的存在，会产生菱形继承")]),s._v(" "),n("li",[s._v("而为了解决菱形继承的问题，又产生了虚拟继承")])]),s._v(" "),n("blockquote",[n("p",[s._v("该部分讲解的继承都不涉及虚函数，因为虚函数是后续的另一个话题。")])]),s._v(" "),n("h3",{attrs:{id:"单继承-重定义"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#单继承-重定义"}},[s._v("#")]),s._v(" 单继承 & 重定义")])])}),[],!1,null,null,null);t.default=e.exports}}]);