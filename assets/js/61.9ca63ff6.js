(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{518:function(s,t,a){"use strict";a.r(t);var n=a(27),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"_12-1-命令行参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12-1-命令行参数"}},[s._v("#")]),s._v(" 12.1. 命令行参数")]),s._v(" "),a("p",[s._v("命令行参数的作用：")]),s._v(" "),a("ul",[a("li",[s._v("本章创建的 binary 项目叫 "),a("code",[s._v("minigrep")])]),s._v(" "),a("li",[s._v("通过 "),a("code",[s._v("cargo run")]),s._v(" 来运行时，可以设置两个参数：要查找的 string ，要查找的 filename")]),s._v(" "),a("li",[s._v("因此程序需要接收命令行参数")]),s._v(" "),a("li",[s._v("可以借助 crate.io 中已有的库来完成命令行参数的处理，但本章的目的是练习，因此需要我们自己来实现")])]),s._v(" "),a("p",[s._v("命令行参数使用例子：")]),s._v(" "),a("div",{staticClass:"language-text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ cargo run stringxxx filexxx.txt\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h5",{attrs:{id:"reading-the-argument-values"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reading-the-argument-values"}},[s._v("#")]),s._v(" Reading the Argument Values")]),s._v(" "),a("p",[s._v("读取方式：")]),s._v(" "),a("ul",[a("li",[s._v("使用 rust 标准库的 "),a("code",[s._v("std::env::args()")]),s._v(" 方法")]),s._v(" "),a("li",[s._v("该方法得到命令行参数的 "),a("code",[s._v("iterator")])]),s._v(" "),a("li",[s._v("通过 "),a("code",[s._v("collect()")]),s._v(" 方法来将 "),a("code",[s._v("iterator")]),s._v(" 转换为 collection")]),s._v(" "),a("li",[s._v("通过声明接收变量的类型，例如 "),a("code",[s._v("Vec<String>")]),s._v(" ，从而让 "),a("code",[s._v("collect()")]),s._v(" 方法知道要转换为哪种 collection")])]),s._v(" "),a("p",[s._v("关于 "),a("code",[s._v("args()")]),s._v(" 方法：")]),s._v(" "),a("ul",[a("li",[s._v("最好不要 "),a("code",[s._v("use std::env::args")]),s._v(" ，然后直接调用 "),a("code",[s._v("args()")])]),s._v(" "),a("li",[s._v("而是 "),a("code",[s._v("use std::env")]),s._v(" ，然后通过 "),a("code",[s._v("env::args()")]),s._v(" 方式来调用，这样的话，如果当前 module 有同名 "),a("code",[s._v("args")]),s._v(" 方法，也可以避免歧义")]),s._v(" "),a("li",[a("code",[s._v("std::env::args")]),s._v(" 只能处理 ==valid unicode== 参数，得到的结果是 "),a("code",[s._v("String")]),s._v(" ，否则会 panic")]),s._v(" "),a("li",[s._v("如果要处理 ==invalid unicode== 参数，则需要使用 "),a("code",[s._v("std::env::args_os")]),s._v(" ，得到结果就是 "),a("code",[s._v("OsString")])]),s._v(" "),a("li",[s._v("本章使用 "),a("code",[s._v("std::env::args")])])]),s._v(" "),a("p",[s._v("命令行参数的内容：")]),s._v(" "),a("ul",[a("li",[s._v("第一个参数是当前程序的名称和路径，会被自动传入")]),s._v(" "),a("li",[s._v("后续就是 "),a("code",[s._v("cargo run")]),s._v(" 所传入的参数，且顺序与 "),a("code",[s._v("cargo run")]),s._v(" 传入时一致")])]),s._v(" "),a("blockquote",[a("p",[s._v("使用 std::env::args 获取命令行参数")])]),s._v(" "),a("div",{staticClass:"language-rust line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-rust"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("use")]),s._v(" std"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("::")]),s._v("env"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fn")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Vec"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("String"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" env"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("args")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("collect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//使用 {:?} 来输出")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println!")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"{:?}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("blockquote",[a("p",[s._v("使用 cargo run 运行，不传入参数，可以看到有一个命令行参数，就是当前程序")])]),s._v(" "),a("div",{staticClass:"language-text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('$ cargo run\n\n["target/debug/minigrep"]\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("blockquote",[a("p",[s._v("使用 cargo run 运行，传入参数")])]),s._v(" "),a("div",{staticClass:"language-text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('$ cargo run string1 file2\n\n["target/debug/minigrep", "string1", "file2"]\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("blockquote",[a("p",[s._v("可以传入更多的参数")])]),s._v(" "),a("div",{staticClass:"language-text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('$ cargo run arg1 arg2 arg3 arg4\n\n["target/debug/minigrep", "arg1", "arg2", "arg3", "arg4"]\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])])])}),[],!1,null,null,null);t.default=e.exports}}]);