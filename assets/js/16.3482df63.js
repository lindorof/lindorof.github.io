(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{431:function(t,s,a){t.exports=a.p+"assets/img/03-01.6825cbed.png"},499:function(t,s,a){"use strict";a.r(s);var n=a(27),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"_16-3-共享数据"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_16-3-共享数据"}},[t._v("#")]),t._v(" 16.3. 共享数据")]),t._v(" "),n("h2",{attrs:{id:"理念"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#理念"}},[t._v("#")]),t._v(" 理念")]),t._v(" "),n("h3",{attrs:{id:"回顾"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#回顾"}},[t._v("#")]),t._v(" 回顾")]),t._v(" "),n("ul",[n("li",[t._v("虽然消息传递是很好的处理并发的方式，但并不是唯一一种方式")]),t._v(" "),n("li",[t._v("仍然可以通过共享数据的方式，来完成并发处理")]),t._v(" "),n("li",[t._v("消息传递比较简单：\n"),n("ul",[n("li",[t._v("一个通道，多个发送者，一个接收者")]),t._v(" "),n("li",[t._v("各个发送者和接收者之间互不干扰，独立处理")]),t._v(" "),n("li",[t._v("通道中的数据会被串行依次处理")])])]),t._v(" "),n("li",[t._v("而共享数据就比较复杂：\n"),n("ul",[n("li",[t._v("多个线程都会访问同一份数据")]),t._v(" "),n("li",[t._v("也就是说，多个线程都会拥有同一份数据的所有权")]),t._v(" "),n("li",[t._v("而为了数据安全，多个线程不能同时处理该数据，否则会造成数据错误")]),t._v(" "),n("li",[t._v("也就是说，针对该数据，需要使用互斥器来进行保护")])])])]),t._v(" "),n("h3",{attrs:{id:"互斥器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#互斥器"}},[t._v("#")]),t._v(" 互斥器")]),t._v(" "),n("ul",[n("li",[n("p",[n("em",[n("strong",[t._v("互斥器")])]),t._v("（"),n("em",[t._v("mutex")]),t._v("）是 "),n("em",[t._v("mutual exclusion")]),t._v(" 的缩写")])]),t._v(" "),n("li",[n("p",[t._v("它确保任何时刻，都只有一个线程能够访问到数据")])]),t._v(" "),n("li",[n("p",[t._v("所以，互斥器的流程是：")]),t._v(" "),n("ol",[n("li",[t._v("获取互斥器的锁")]),t._v(" "),n("li",[t._v("访问数据")]),t._v(" "),n("li",[t._v("释放互斥器的锁")]),t._v(" "),n("li",[t._v("其它线程继续获取互斥器的锁，重复上述流程")])])]),t._v(" "),n("li",[n("p",[t._v("因此，互斥器比较复杂，因为涉及到多个步骤，而某个步骤忘记执行、或执行出错，都会导致其它线程无法再访问到数据")])]),t._v(" "),n("li",[n("p",[t._v("在 rust 中，基于类型系统和所有权，确保了互斥器的获取锁/释放锁不会出错")])])]),t._v(" "),n("h2",{attrs:{id:"rust-共享数据"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#rust-共享数据"}},[t._v("#")]),t._v(" Rust 共享数据")]),t._v(" "),n("h3",{attrs:{id:"互斥器-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#互斥器-2"}},[t._v("#")]),t._v(" 互斥器")]),t._v(" "),n("ul",[n("li",[t._v("rust 提供的互斥器是 "),n("code",[t._v("Mutex<T>")]),t._v(" ：\n"),n("ul",[n("li",[n("code",[t._v("T")]),t._v(" 是要保护的数据")]),t._v(" "),n("li",[n("code",[t._v("Mutex")]),t._v(" 是提供保护的互斥器")])])]),t._v(" "),n("li",[n("code",[t._v("Mutex")]),t._v(" 提供"),n("code",[t._v("lock")]),t._v(" 方法来获取锁：\n"),n("ul",[n("li",[n("code",[t._v("lock")]),t._v(" 会阻塞等待，直到获取到锁")]),t._v(" "),n("li",[t._v("获取到锁后，得到的结果是 "),n("code",[t._v("MutexGuard")])]),t._v(" "),n("li",[n("code",[t._v("MutexGuard")]),t._v(" 实现了 "),n("code",[t._v("Deref")]),t._v(" 和 "),n("code",[t._v("Drop")]),t._v(" ：\n"),n("ul",[n("li",[n("code",[t._v("Deref")]),t._v(" 用来指向内部数据")]),t._v(" "),n("li",[n("code",[t._v("Drop")]),t._v(" 用来释放锁")])])]),t._v(" "),n("li",[t._v("因此，基于 rust 的所有权规则，获取到的锁总是能确保被释放")])])]),t._v(" "),n("li",[n("code",[t._v("Mutex")]),t._v(" 所保护的数据是可变的，也就是说，获取到锁以后，可以改变数据内容")])]),t._v(" "),n("h3",{attrs:{id:"多线程控制"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#多线程控制"}},[t._v("#")]),t._v(" 多线程控制")]),t._v(" "),n("h4",{attrs:{id:"问题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#问题"}},[t._v("#")]),t._v(" 问题")]),t._v(" "),n("ul",[n("li",[t._v("既然要多线程共享数据，则线程中需要能够访问该数据")]),t._v(" "),n("li",[t._v("而线程中要访问该数据，就需要 move 闭包")]),t._v(" "),n("li",[t._v("而要完成数据保护，则需要 "),n("code",[t._v("Mutex")])]),t._v(" "),n("li",[t._v("可是 "),n("code",[t._v("Mutex")]),t._v(" 本身也是数据，不可能同时被 move 闭包到多个线程中")])]),t._v(" "),n("h4",{attrs:{id:"解决"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#解决"}},[t._v("#")]),t._v(" 解决")]),t._v(" "),n("ul",[n("li",[t._v("要实现多线程共享数据，而且进行数据保护，就必须实现一点："),n("code",[t._v("Mutex")]),t._v(" 必须共享所有权")]),t._v(" "),n("li",[t._v("就类似于 "),n("code",[t._v("Rc")]),t._v(" ，能够共享同一份数据的所有权，但要注意，此处共享所有权的数据，不是多线程之间要共同访问的那份数据，而是 "),n("code",[t._v("Mutex")]),t._v(" 实例本身")]),t._v(" "),n("li",[t._v("但之前讲过，"),n("code",[t._v("Rc")]),t._v(" 不能在多线程中使用，因为多线程之间的计数控制和资源销毁会出问题")]),t._v(" "),n("li",[t._v("所以，rust 提供了另一个类似 "),n("code",[t._v("Rc")]),t._v(" 的实现，就是 "),n("code",[t._v("Arc")])])]),t._v(" "),n("h4",{attrs:{id:"arc-t"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#arc-t"}},[t._v("#")]),t._v(" "),n("code",[t._v("Arc<T>")])]),t._v(" "),n("ul",[n("li",[n("code",[t._v("Arc")]),t._v(" 的意思是 "),n("em",[t._v("atomic reference counter")]),t._v(" ，也就是原子性的")]),t._v(" "),n("li",[t._v("正是通过原子性，才确保了多线程之间的计数控制和资源销毁的正确性")]),t._v(" "),n("li",[t._v("所以，"),n("code",[t._v("Arc")]),t._v(" 是一个多线程版的 "),n("code",[t._v("Rc")])]),t._v(" "),n("li",[t._v("因此，rust 提供了单线程的 "),n("code",[t._v("Rc")]),t._v(" 和 多线程的 "),n("code",[t._v("Arc")]),t._v(" ，原因就是多线程之间的原子性控制会损失性能，所以可以根据场景来选择使用 "),n("code",[t._v("Rc")]),t._v(" 或 "),n("code",[t._v("Arc")])])]),t._v(" "),n("h4",{attrs:{id:"结论"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#结论"}},[t._v("#")]),t._v(" 结论")]),t._v(" "),n("ul",[n("li",[t._v("要实现多线程共享数据，就需要结合 "),n("code",[t._v("Arc")]),t._v(" 和 "),n("code",[t._v("Mutex")]),t._v(" 来使用")]),t._v(" "),n("li",[t._v("也就是 "),n("code",[t._v("Arc<Mutex<T>>")])])]),t._v(" "),n("h3",{attrs:{id:"refcell-rc-mutex-arc"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#refcell-rc-mutex-arc"}},[t._v("#")]),t._v(" "),n("code",[t._v("Refcell")]),t._v(" / "),n("code",[t._v("Rc")]),t._v(" & "),n("code",[t._v("Mutex")]),t._v(" / "),n("code",[t._v("Arc")])]),t._v(" "),n("blockquote",[n("p",[t._v("注意，下述讨论所针对的是 "),n("em",[n("strong",[t._v("实例中所存储的数据")])]),t._v("，而不是 "),n("em",[n("strong",[t._v("实例本身")])])])]),t._v(" "),n("h4",{attrs:{id:"可变性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#可变性"}},[t._v("#")]),t._v(" 可变性")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("RefCell")]),t._v(" 和 "),n("code",[t._v("Mutex")]),t._v(" 都提供可变性")]),t._v(" "),n("li",[n("code",[t._v("Rc")]),t._v(" 和 "),n("code",[t._v("Arc")]),t._v(" 只能是不可变的")])]),t._v(" "),n("h4",{attrs:{id:"所有权"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#所有权"}},[t._v("#")]),t._v(" 所有权")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("RefCell")]),t._v(" 和 "),n("code",[t._v("Mutex")]),t._v(" 中只提供单一所有权")]),t._v(" "),n("li",[n("code",[t._v("Rc")]),t._v(" 和 "),n("code",[t._v("Arc")]),t._v(" 可通过 "),n("code",[t._v("clone")]),t._v(" 来得到新的所有者")])]),t._v(" "),n("h4",{attrs:{id:"多线程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#多线程"}},[t._v("#")]),t._v(" 多线程")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("Rc")]),t._v(" 和 "),n("code",[t._v("RefCell")]),t._v(" 只能使用在单线程中")]),t._v(" "),n("li",[n("code",[t._v("Arc")]),t._v(" 和 "),n("code",[t._v("Mutex")]),t._v(" 可以使用在多线程中")])]),t._v(" "),n("h4",{attrs:{id:"关系图"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#关系图"}},[t._v("#")]),t._v(" 关系图")]),t._v(" "),n("p",[n("code",[t._v("Mutex")]),t._v(" / "),n("code",[t._v("Arc")]),t._v(" 关系图如下：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(431),alt:"03-01"}})]),t._v(" "),n("h2",{attrs:{id:"实现共享数据"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#实现共享数据"}},[t._v("#")]),t._v(" 实现共享数据")]),t._v(" "),n("h3",{attrs:{id:"用法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#用法"}},[t._v("#")]),t._v(" 用法")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("Mutex")]),t._v(" 和 "),n("code",[t._v("Arc")]),t._v(" 都在 "),n("code",[t._v("std::sync")]),t._v(" 中")]),t._v(" "),n("li",[t._v("假设资源为 m ，则使用 "),n("code",[t._v("Mutex::new(m)")]),t._v(" 来创建互斥器 "),n("code",[t._v("mt")])]),t._v(" "),n("li",[t._v("使用 "),n("code",[t._v("Arc::new(mt)")]),t._v(" 创建一个 "),n("code",[t._v("Arc")]),t._v(" 实例 "),n("code",[t._v("arc1")])]),t._v(" "),n("li",[t._v("使用 "),n("code",[t._v("Arc::clone(&arc1)")]),t._v(" 来创建新的所有者 "),n("code",[t._v("arc 2")])]),t._v(" "),n("li",[t._v("使用 "),n("code",[t._v("mt.lock().unwrap()")]),t._v(" 来得到 "),n("code",[t._v("MutexGuard")]),t._v(" 实例 "),n("code",[t._v("mtg")])]),t._v(" "),n("li",[t._v("通过 "),n("code",[t._v("mtg")]),t._v(" ，可访问到资源 m ，例如 "),n("code",[t._v("*mtg")])])]),t._v(" "),n("h3",{attrs:{id:"示例"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[t._v("#")]),t._v(" 示例")]),t._v(" "),n("p",[t._v("下面是一个多线程共享数据的场景：")]),t._v(" "),n("ul",[n("li",[t._v("创建多个线程")]),t._v(" "),n("li",[t._v("这些线程共享 "),n("code",[t._v("Vec<String>")])]),t._v(" "),n("li",[t._v("每个线程都在 "),n("code",[t._v("Vec<String>")]),t._v(" 中加入一个当前线程标识，例如 "),n("code",[t._v("str3")])]),t._v(" "),n("li",[t._v("对于 "),n("code",[t._v("Vec<String>")]),t._v(" ，需要使用 "),n("code",[t._v("Mutex")]),t._v(" 进行互斥保护")]),t._v(" "),n("li",[t._v("为了将互斥器在多个线程中共享，需要使用 "),n("code",[t._v("Arc")])])]),t._v(" "),n("p",[t._v("对应代码如下，注意看注释：")]),t._v(" "),n("div",{staticClass:"language-rust line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-rust"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" std"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),t._v("thread"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 需使用 Mutex 和 Arc")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" std"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),t._v("sync"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("Mutex"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Arc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 要共享的数据是 Vec<String>")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用 Mutex 进行互斥保护")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 再通过 Arc 来在多线程间共享 Mutex")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" sv "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Arc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("new")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Mutex"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("new")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("vec!")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将多个线程句柄存储在 Vec 中")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("mut")]),t._v(" hd "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("vec!")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 为每个线程克隆一个 Mutex 的所有者")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 并将该 Mutex 的所有者 move 闭包到线程中")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" sv_arc "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Arc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("clone")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("sv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 存储该子线程的句柄")]),t._v("\n\t\thd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("thread"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("spawn")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("move")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token closure-params"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 根据索引来生成当前线程的标识字符串")]),t._v("\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" s "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("format!")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"str{}"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 互斥获得 Vec<String> 的访问")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 并在 Vec<String> 中加入当前线程的标识字符串")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [*①]")]),t._v("\n\t\t\tsv_arc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("lock")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("unwrap")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等待所有线程执行结束")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" h "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" hd "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\th"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("unwrap")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 互斥获得 Vec<String> 的访问")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 并打印 Vec<String> 中的内容")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 从而可以观察到各个线程的执行顺序")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [*②]")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" s "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("sv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("lock")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("unwrap")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println!")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{}"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br"),n("span",{staticClass:"line-number"},[t._v("24")]),n("br"),n("span",{staticClass:"line-number"},[t._v("25")]),n("br"),n("span",{staticClass:"line-number"},[t._v("26")]),n("br"),n("span",{staticClass:"line-number"},[t._v("27")]),n("br"),n("span",{staticClass:"line-number"},[t._v("28")]),n("br"),n("span",{staticClass:"line-number"},[t._v("29")]),n("br"),n("span",{staticClass:"line-number"},[t._v("30")]),n("br"),n("span",{staticClass:"line-number"},[t._v("31")]),n("br"),n("span",{staticClass:"line-number"},[t._v("32")]),n("br"),n("span",{staticClass:"line-number"},[t._v("33")]),n("br"),n("span",{staticClass:"line-number"},[t._v("34")]),n("br"),n("span",{staticClass:"line-number"},[t._v("35")]),n("br"),n("span",{staticClass:"line-number"},[t._v("36")]),n("br"),n("span",{staticClass:"line-number"},[t._v("37")]),n("br"),n("span",{staticClass:"line-number"},[t._v("38")]),n("br"),n("span",{staticClass:"line-number"},[t._v("39")]),n("br"),n("span",{staticClass:"line-number"},[t._v("40")]),n("br")])]),n("p",[t._v("注意对共享数据的解引用：")]),t._v(" "),n("ul",[n("li",[t._v("[*①]\n"),n("ul",[n("li",[t._v("此时需要在 "),n("code",[t._v("Vec<String>")]),t._v(" 中加入字符串")]),t._v(" "),n("li",[t._v("所以可以直接 "),n("code",[t._v(".push()")]),t._v(" ，因为 rust 会自动解引用")])])]),t._v(" "),n("li",[t._v("[*②]\n"),n("ul",[n("li",[t._v("此时需要打印 "),n("code",[t._v("Vec<String>")]),t._v(" 中的内容")]),t._v(" "),n("li",[n("code",[t._v("for")]),t._v(" 循环不会自动解引用，以为 rust 无法推断最终要打印的类型")]),t._v(" "),n("li",[t._v("所以首先需要 "),n("code",[t._v("*MutexGuard")]),t._v(" 来进行解引用，得到 "),n("code",[t._v("Vec<String>")])]),t._v(" "),n("li",[t._v("但是不能将 "),n("code",[t._v("Vec<String>")]),t._v(" 的所有权 move 到 "),n("code",[t._v("for")]),t._v(" 中")]),t._v(" "),n("li",[t._v("因此又需要 "),n("code",[t._v("&")]),t._v(" 来进行引用，得到 "),n("code",[t._v("&Vec<String>")])])])])]),t._v(" "),n("p",[t._v("打印结果可能如下：")]),t._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[t._v("str4\nstr5\nstr6\nstr2\nstr1\nstr3\nstr7\nstr9\nstr8\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br")])])])}),[],!1,null,null,null);s.default=e.exports}}]);