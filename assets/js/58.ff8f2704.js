(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{521:function(t,s,a){"use strict";a.r(s);var n=a(27),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"_11-3-单元测试-集成测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-3-单元测试-集成测试"}},[t._v("#")]),t._v(" 11.3. 单元测试 & 集成测试")]),t._v(" "),a("p",[t._v("概述：")]),t._v(" "),a("ul",[a("li",[t._v("测试是一门复杂的学科，不同的语言及不同的人对于测试会使用不同的术语和组织方式")]),t._v(" "),a("li",[t._v("rust 将测试分为两大类："),a("em",[a("strong",[t._v("unit test")])]),t._v(" 和 "),a("em",[a("strong",[t._v("integration test")])])]),t._v(" "),a("li",[a("em",[a("strong",[t._v("unit test")])]),t._v(" 可以测试 private 接口")]),t._v(" "),a("li",[a("em",[a("strong",[t._v("integration test")])]),t._v(" 只能测试 public 接口")])]),t._v(" "),a("h3",{attrs:{id:"unit-test"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#unit-test"}},[t._v("#")]),t._v(" Unit Test")]),t._v(" "),a("h5",{attrs:{id:"规则说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#规则说明"}},[t._v("#")]),t._v(" 规则说明")]),t._v(" "),a("ol",[a("li",[t._v("unit test 关注的是独立的代码单元，通常是 module")]),t._v(" "),a("li",[t._v("因此 unit test 针对的是具体某个代码单元的测试，测试时与其它代码单元也是隔离的")]),t._v(" "),a("li",[t._v("代码单元一般遵循的规则是：每个 module 在 src 中单独使用一个代码文件，因此，unit test 也是在对应的每个代码单元文件中书写 test function")]),t._v(" "),a("li",[t._v("因此，unit test 的一般书写规则是：在对应的代码单元文件中，创建一个 module，名称是 "),a("code",[t._v("tests")]),t._v(" ，并将该 module 配置为 "),a("code",[t._v("#[cfg(test)]")])])]),t._v(" "),a("h5",{attrs:{id:"cfg-test"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cfg-test"}},[t._v("#")]),t._v(" "),a("code",[t._v("#[cfg(test)]")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("#[cfg]")]),t._v(" 表示一些特定的配置选项")]),t._v(" "),a("li",[t._v("而 "),a("code",[t._v("#[cfg(test)]")]),t._v(" 的意思是，这些代码仅用于测试")]),t._v(" "),a("li",[t._v("因此，只有 "),a("code",[t._v("cargo test")]),t._v(" 的时候，rust 才会编译和运行 "),a("code",[t._v("#[cfg(test)]")]),t._v(" 所标注的这些代码")]),t._v(" "),a("li",[t._v("同时，"),a("code",[t._v("cargo build")]),t._v(" 的时候，rust 不会编译和包含 "),a("code",[t._v("#[cfg(test)]")]),t._v(" 所标注的代码，从而提高编译效率并缩小目标文件的大小")]),t._v(" "),a("li",[t._v("另一方面，正是由于 unit test 的代码位于各个代码单元文件中，从而为了让 rust 编译器能够区分开 unit test 代码，才需要 "),a("code",[t._v("#[cfg(test)]")]),t._v(" 标注")]),t._v(" "),a("li",[t._v("最后，对于 integration test 来说，由于测试代码是独立位于不同的文件夹中，从而也就不需要 "),a("code",[t._v("#[cfg(test)]")]),t._v(" 标注")])]),t._v(" "),a("p",[t._v("回顾一下 unit test 代码：")]),t._v(" "),a("div",{staticClass:"language-rust line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-rust"}},[a("code",[a("span",{pre:!0,attrs:{class:"token attribute attr-name"}},[t._v("#[cfg(test)]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("mod")]),t._v(" tests "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token attribute attr-name"}},[t._v("#[test]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("it_works")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("assert_eq!")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("h5",{attrs:{id:"testing-private-functions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#testing-private-functions"}},[t._v("#")]),t._v(" Testing Private Functions")]),t._v(" "),a("ul",[a("li",[t._v("业界一直在争论是否应该允许直接测试 private function")]),t._v(" "),a("li",[t._v("但不管大家的测试理念如何，对 rust 来说，允许直接测试 private function")])]),t._v(" "),a("blockquote",[a("p",[t._v("质疑")])]),t._v(" "),a("ul",[a("li",[t._v("在 Chapter7 ，我用比较民间的语言对 pub 和 private 的进行了清晰的阐述")]),t._v(" "),a("li",[t._v("而在官方文档中，举了一个测试 private function 的例子，但是这个例子本身是符合 Chapter7 中的可见性规则的")]),t._v(" "),a("li",[t._v("而且，即使对于 unit test，同样也完全遵循 Chapter7 中的可见性规则")]),t._v(" "),a("li",[t._v("下面对拓展官方文档的例子进行扩展，来说明即使对于 test module，也没有打破 rust 本身的可见性规则")]),t._v(" "),a("li",[t._v("当然，也许官方文档想表达的并不是可见性规则，而是究竟是否应该直接测试 private function")]),t._v(" "),a("li",[t._v("可我的疑问是，既然遵循可见性规则，为什么要争论 private function 是否可以被测试")])]),t._v(" "),a("p",[t._v("下面是官方文档的例子，本身是遵循 Chapter7 的可见性规则的：")]),t._v(" "),a("div",{staticClass:"language-rust line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-rust"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("funcg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token attribute attr-name"}},[t._v("#[cfg(test)]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("mod")]),t._v(" tests "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token attribute attr-name"}},[t._v("#[test]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("it_works")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//OK")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//可以测试funcg")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//虽然funcg是private")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("funcg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br")])]),a("p",[t._v("同样的，根据 Chapter7 总结的可见性规则，下面的例子是不能被编译的：")]),t._v(" "),a("div",{staticClass:"language-rust line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-rust"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("mod")]),t._v(" sth "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("func")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token attribute attr-name"}},[t._v("#[cfg(test)]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("mod")]),t._v(" tests "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token attribute attr-name"}},[t._v("#[test]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("it_works")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//ERROR")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//只能访问到sth")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//不能访问到sth中的func")]),t._v("\n        sth"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("func")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br")])]),a("h3",{attrs:{id:"integration-test"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#integration-test"}},[t._v("#")]),t._v(" Integration Test")]),t._v(" "),a("blockquote",[a("p",[t._v("注：为了描述方便，我自己将 integration test 缩写为 "),a("code",[t._v("IT")]),t._v(" ，不属于官方称呼")])]),t._v(" "),a("h5",{attrs:{id:"it-组织规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#it-组织规则"}},[t._v("#")]),t._v(" "),a("code",[t._v("IT")]),t._v(" 组织规则")]),t._v(" "),a("ul",[a("li",[t._v("IT 代码是完全位于 lib 之外的")]),t._v(" "),a("li",[t._v("rust 将 lib 当做一个 crate ，然后将 IT 当做其它的 crate")]),t._v(" "),a("li",[t._v("也就是说，IT 需要访问 lib 中的功能时，需要使用 "),a("code",[t._v("use libxxx")])]),t._v(" "),a("li",[t._v("由于 IT 与 lib 属于独立的两个 crate ，按照 Chapter7 的访问规则，IT 当然是访问不到 lib 中 private 的 item")]),t._v(" "),a("li",[t._v("IT 的代码统一放在与 "),a("code",[t._v("src")]),t._v(" 并列的 "),a("code",[t._v("tests")]),t._v(" 目录下")])]),t._v(" "),a("h5",{attrs:{id:"tests-组织结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tests-组织结构"}},[t._v("#")]),t._v(" "),a("code",[t._v("tests")]),t._v(" 组织结构")]),t._v(" "),a("ul",[a("li",[t._v("在 "),a("code",[t._v("tests")]),t._v(" 目录下，一个 "),a("code",[t._v("rs")]),t._v(" 文件又是一个 crate ，这些独立的 crate 都通过 "),a("code",[t._v("use libxxx")]),t._v(" 来访问 lib 中的功能")]),t._v(" "),a("li",[t._v("也就是说，各个 IT 是相互独立的，即使各个 IT 中的 function 和 module 同名")]),t._v(" "),a("li",[t._v("一个 "),a("code",[t._v("rs")]),t._v(" 文件表示一个 IT ，在运行 "),a("code",[t._v("cargo test")]),t._v(" 时，针对一个 IT ，会独立的描述该 IT 的测试清单，并为该 IT 统计测试结果")])]),t._v(" "),a("h5",{attrs:{id:"test-标注"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#test-标注"}},[t._v("#")]),t._v(" "),a("code",[t._v("#[test]")]),t._v(" 标注")]),t._v(" "),a("ul",[a("li",[t._v("在一个 IT 中，test function 可以是独立的，也可以位于 module 之中")]),t._v(" "),a("li",[t._v("只要该 IT 中的任意位置的 function 被标注了 "),a("code",[t._v("#[test]")]),t._v(" ，就会当做 test function")]),t._v(" "),a("li",[t._v("也就是说，对于 IT 来说，rust 关注的是对 test function 的 "),a("code",[t._v("#[test]")]),t._v(" 标注，而不再需要对 module 标注 "),a("code",[t._v("#[cfg(test)]")])])]),t._v(" "),a("h5",{attrs:{id:"it-功能共享"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#it-功能共享"}},[t._v("#")]),t._v(" "),a("code",[t._v("IT")]),t._v(" 功能共享")]),t._v(" "),a("ul",[a("li",[t._v("首先要明确的是，在 "),a("code",[t._v("tests")]),t._v(" 目录下，各个 IT 之间是相互独立的 crate ，因此，各个 "),a("code",[t._v("rs")]),t._v(" 文件之间不会存在命名冲突，也无法共享功能")]),t._v(" "),a("li",[t._v("其次需要重复上面讲过的内容：在 "),a("code",[t._v("tests")]),t._v(" 目录下，一个 "),a("code",[t._v("rs")]),t._v(" 就是一个独立的 IT ，运行 "),a("code",[t._v("cargo test")]),t._v(" 时会独立描述该 IT 的测试清单并统计测试结果，即使该 IT 中没有任何被标注为 "),a("code",[t._v("#[test]")]),t._v(" 的 function")]),t._v(" "),a("li",[t._v("因此，如果针对各个 IT 之间需要共享一些功能代码，例如，将一些辅助功能进行整合，叫做 util ，则需要如下步骤：\n"),a("ol",[a("li",[t._v("在 "),a("code",[t._v("tests")]),t._v(" 下建立 "),a("code",[t._v("util")]),t._v(" 子目录")]),t._v(" "),a("li",[t._v("在 "),a("code",[t._v("util")]),t._v(" 子目录下创建 "),a("code",[t._v("mod.rs")]),t._v(" 文件里承载 util 的代码")]),t._v(" "),a("li",[t._v("在某个 IT 中需要使用 util 代码时，在对应该 IT 的 "),a("code",[t._v("rs")]),t._v(" 文件中使用 "),a("code",[t._v("mod util")]),t._v(" 语法")]),t._v(" "),a("li",[t._v("如果还有其它的共享功能需要整合，例如 help 系列，则重复上述步骤；")]),t._v(" "),a("li",[t._v("也就是说，子文件夹的名称决定了所共享的功能系列名称，也决定了在 IT 中 "),a("code",[t._v("mod xxxx")]),t._v(" 的名称，同时，代码文件只能是 "),a("code",[t._v("mod.rs")])]),t._v(" "),a("li",[t._v("如果需要将某个共享功能系列中的 "),a("code",[t._v("mod.rs")]),t._v(" 代码继续拆分，则参考 Chapter7 对 module 的讲解")])])]),t._v(" "),a("li",[t._v("其实可以看到，上述全部步骤与 Chapter7 的 module 组织规则是一致的，也就是说，一个 IT 是一个 crate ，而一个 IT 又对应一个 "),a("code",[t._v("rs")]),t._v(" ，从而，需要共享的功能代码对该 IT 来说是一种 sub module ，对应的，该 IT 中 需要使用 "),a("code",[t._v("mod util")]),t._v(" ，而不是 "),a("code",[t._v("use util")])]),t._v(" "),a("li",[t._v("另外，放在子目录中的共享功能不会被 "),a("code",[t._v("cargo test")]),t._v(" 识别为 IT ，从而也就不会为该子目录的功能产生测试清单输出")])]),t._v(" "),a("h5",{attrs:{id:"it-lib-的逻辑关系"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#it-lib-的逻辑关系"}},[t._v("#")]),t._v(" IT/LIB 的逻辑关系")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("graph TD\n\nA[libx] --\x3e |use libx| B[IT1]\nA --\x3e |use libx| C[IT2]\nB --\x3e |mod util| D(util)\nC --\x3e |mod util| D\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("h5",{attrs:{id:"it-lib-的目录结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#it-lib-的目录结构"}},[t._v("#")]),t._v(" IT/LIB 的目录结构")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("graph TD\n\nPJ{/libx} --\x3e SRC{/src}\nSRC --\x3e LIB[lib.rs]\nPJ --\x3e TESTS{/tests}\nTESTS --\x3e IT1[it1.rs]\nTESTS --\x3e IT2[it2.rs]\nTESTS --\x3e UTIL{/util}\nUTIL --\x3e UTLSRC[mod.rs]\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("h5",{attrs:{id:"关于-binary-crate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关于-binary-crate"}},[t._v("#")]),t._v(" 关于 binary crate")]),t._v(" "),a("ul",[a("li",[t._v("对于 binary crate，如果只有 src/main.rs 而没有 src/lib.rs ，则不能进行 integration test")]),t._v(" "),a("li",[t._v("因为在 src/main.rs 中已经可以直接调用和测试代码")])])])}),[],!1,null,null,null);s.default=e.exports}}]);