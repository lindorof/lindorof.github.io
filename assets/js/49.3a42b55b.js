(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{526:function(s,a,t){"use strict";t.r(a);var e=t(27),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"_9-3-何时使用-panic"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_9-3-何时使用-panic"}},[s._v("#")]),s._v(" 9.3. 何时使用 panic")]),s._v(" "),t("h3",{attrs:{id:"概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[s._v("#")]),s._v(" 概述")]),s._v(" "),t("ul",[t("li",[s._v("一旦 "),t("code",[s._v("panic!")]),s._v(" ，则程序无法恢复")]),s._v(" "),t("li",[s._v("而返回 "),t("code",[s._v("Result")]),s._v(" 时，调用者可以自行决定是否 "),t("code",[s._v("panic!")])]),s._v(" "),t("li",[s._v("因此在定义函数时，使用 "),t("code",[s._v("Result")]),s._v(" 是更好的选择，将决定权交给调用者")]),s._v(" "),t("li",[s._v("但是在某些情况下，"),t("code",[s._v("panic!")]),s._v(" 更合适：Examples / Prototype Code / Tests")])]),s._v(" "),t("h3",{attrs:{id:"使用-panic-的场景"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用-panic-的场景"}},[s._v("#")]),s._v(" 使用 "),t("code",[s._v("panic!")]),s._v(" 的场景")]),s._v(" "),t("h5",{attrs:{id:"examples"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#examples"}},[s._v("#")]),s._v(" Examples")]),s._v(" "),t("ul",[t("li",[s._v("编写示例代码来展示某些概念时，健壮的错误处理反而会导致代码不够清晰")]),s._v(" "),t("li",[s._v("在示例代码中，类似 "),t("code",[s._v("unwrap")]),s._v(" 这种可能导致 panic 的调用，更适合也更易于用来表达此处需要进行错误处理，而不用也不应该加入更多健壮的错误处理代码去影响示例代码的可读性")])]),s._v(" "),t("h5",{attrs:{id:"prototype-code"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#prototype-code"}},[s._v("#")]),s._v(" Prototype Code")]),s._v(" "),t("ul",[t("li",[s._v("原型开发时，在决定如何处理错误情况之前，可以使用 "),t("code",[s._v("unwrap")]),s._v(" 、 "),t("code",[s._v("expect")]),s._v(" 等等这些非常便利的方法")]),s._v(" "),t("li",[s._v("以后准备处理这些错误情况时，这些方法在代码中都是很清晰的标识")])]),s._v(" "),t("h5",{attrs:{id:"tests"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tests"}},[s._v("#")]),s._v(" Tests")]),s._v(" "),t("ul",[t("li",[s._v("在测试时，如果一个方法调用失败了，可以让整个测试失败并终止，虽然这个方法并不是测试的功能点")]),s._v(" "),t("li",[s._v("因为在测试时，"),t("code",[s._v("panic!")]),s._v("可以标记出测试是如何失败的，所以通过 "),t("code",[s._v("unwrap")]),s._v(" 、 "),t("code",[s._v("expect")]),s._v(" 等，可以让测试精确的表现出其结果")])]),s._v(" "),t("h5",{attrs:{id:"wiser-than-compiler"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#wiser-than-compiler"}},[s._v("#")]),s._v(" Wiser than Compiler")]),s._v(" "),t("ul",[t("li",[s._v("虽然得到的是 "),t("code",[s._v("Result")]),s._v(" ，但程序员确定结果不可能是 "),t("code",[s._v("Err")]),s._v("，此时就可以直接使用 "),t("code",[s._v("unwrap")])]),s._v(" "),t("li",[s._v("这个时候程序员就比编译器更聪明，因为编译器无法知道此时结果一定不可能 "),t("code",[s._v("Err")])]),s._v(" "),t("li",[s._v("例如下面的例子，可以直接使用 "),t("code",[s._v("unwrap")])])]),s._v(" "),t("div",{staticClass:"language-rust line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-rust"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("use")]),s._v(" std"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("::")]),s._v("net"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("::")]),s._v("IpAddr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*\n需要注意的是，\n若此时字符串不是硬编码，\n而是根据用户输入的话，\n就需要明确的处理 Err 的情况\n*/")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" home"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" IpAddr "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"127.0.0.1"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("parse")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("unwrap")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("h3",{attrs:{id:"guidelines-for-panic！"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#guidelines-for-panic！"}},[s._v("#")]),s._v(" ++Guidelines++ for "),t("code",[s._v("panic！")])]),s._v(" "),t("h5",{attrs:{id:"panic-使用原则："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#panic-使用原则："}},[s._v("#")]),s._v(" panic 使用原则：")]),s._v(" "),t("ol",[t("li",[s._v("代码可能因为 bad state 而终止")]),s._v(" "),t("li",[s._v("出现了非预期的 bad state")]),s._v(" "),t("li",[s._v("后续代码的执行取决于 bad state 没有出现")]),s._v(" "),t("li",[s._v("对于所使用的 types ，无法 encode 该 bad state 信息")])]),s._v(" "),t("h5",{attrs:{id:"bad-state-解释："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bad-state-解释："}},[s._v("#")]),s._v(" bad state 解释：")]),s._v(" "),t("ul",[t("li",[s._v("一些规则（assumption/guarantee/contract/invariant）被打破")]),s._v(" "),t("li",[s._v("例如，无效的值，矛盾的值，不存在的值")])]),s._v(" "),t("h5",{attrs:{id:"bad-state-举例："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bad-state-举例："}},[s._v("#")]),s._v(" bad state 举例：")]),s._v(" "),t("p",[s._v("调用代码时：")]),s._v(" "),t("ul",[t("li",[s._v("你的代码调用外部代码时")]),s._v(" "),t("li",[s._v("这些外部代码不在可控范围")]),s._v(" "),t("li",[s._v("外部代码返回了无效的状态")]),s._v(" "),t("li",[s._v("因此你的代码无法处理和修复这种无效状态")]),s._v(" "),t("li",[s._v("此时适合使用 "),t("code",[s._v("panic!")])])]),s._v(" "),t("p",[s._v("代码被调用时：")]),s._v(" "),t("ul",[t("li",[s._v("你的代码被调用时")]),s._v(" "),t("li",[s._v("传入了无意义的值")]),s._v(" "),t("li",[s._v("此时最好的方式是 "),t("code",[s._v("panic!")])]),s._v(" "),t("li",[s._v("从而告诉调用者这是一个 bug")]),s._v(" "),t("li",[s._v("进而调用者在开发阶段即可修复该 bug")])]),s._v(" "),t("p",[s._v("处理数据时：")]),s._v(" "),t("ul",[t("li",[s._v("首先，对数据进行有效性校验")]),s._v(" "),t("li",[s._v("其次，若数据无效，则 "),t("code",[s._v("panic!")])]),s._v(" "),t("li",[s._v("这是出于安全性考虑，因为尝试操作无效数据会使代码出现安全漏洞")]),s._v(" "),t("li",[s._v("这就是标准库在发生越界内存访问(例如数组)时 "),t("code",[s._v("panic!")]),s._v(" 的主要原因，尝试访问不属于当前数据结构的内存，是一种常见的引发安全问题的行为")])]),s._v(" "),t("p",[s._v("违反函数契约时：")]),s._v(" "),t("ul",[t("li",[s._v("函数通常都有契约")]),s._v(" "),t("li",[s._v("也就是说，函数的行为只有在输入的信息满足特定要求时才能得到保证")]),s._v(" "),t("li",[s._v("违反契约时，"),t("code",[s._v("panic!")]),s._v(" 是有意义的，因为这是调用者的 bug，而不是一种你希望调用者在外部来处理的错误，且事实上，调用者也没有合理的方式来处理这种错误，因为调用者需要做的是修复其代码")])]),s._v(" "),t("blockquote",[t("p",[s._v("注意：函数的契约，尤其对于违反后会导致 panic 的契约，应当在 API 文档中注明")])]),s._v(" "),t("h3",{attrs:{id:"guidelines-for-result"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#guidelines-for-result"}},[s._v("#")]),s._v(" ++Guidelines++ for "),t("code",[s._v("Result")])]),s._v(" "),t("ul",[t("li",[s._v("预期的错误发生时，适合使用 "),t("code",[s._v("Result")]),s._v(" 而不是 "),t("code",[s._v("panic!")])]),s._v(" "),t("li",[s._v("例如，parser 接收到格式不正确的数据")]),s._v(" "),t("li",[s._v("又如，HTTP 请求遇到限流的情况")]),s._v(" "),t("li",[s._v("对于这些场景，返回 "),t("code",[s._v("Result")]),s._v(" 表示某些预期的失败情况会发生，并让调用者来决定如何处理")])]),s._v(" "),t("h3",{attrs:{id:"借助-rust-的类型系统"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#借助-rust-的类型系统"}},[s._v("#")]),s._v(" 借助 Rust 的类型系统")]),s._v(" "),t("h5",{attrs:{id:"类型系统的作用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#类型系统的作用"}},[s._v("#")]),s._v(" 类型系统的作用")]),s._v(" "),t("ul",[t("li",[s._v("如果在所有的函数中都进行大量的错误校验和检查，会导致代码非常冗余")]),s._v(" "),t("li",[s._v("因此，可以借助 Rust 的类型系统来做这些工作，也就是说，通过编译器来进行类型检查")]),s._v(" "),t("li",[s._v("如果函数参数是一种特殊的类型，那么在代码逻辑中，可以假定编译器已经确保了该参数一定是有效的值")]),s._v(" "),t("li",[s._v("例如，参数类型不是 "),t("code",[s._v("Option")]),s._v(" ，且程序希望该参数的值是 something 而不是 nothing，那么，代码中不需要处理 "),t("code",[s._v("Some")]),s._v(" 和 "),t("code",[s._v("None")]),s._v(" 这两种情形，因为只有一种情况，就是该参数会确切的有一个值。当传入 nothing 时，编译器就会报错，所以在运行时，代码也就没必要检查 nothing 这种情况")]),s._v(" "),t("li",[s._v("又如，参数使用 u32 类型，则可以确保接收到的值不会为负数")])]),s._v(" "),t("h5",{attrs:{id:"自定义类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#自定义类型"}},[s._v("#")]),s._v(" 自定义类型")]),s._v(" "),t("p",[s._v("假设在函数中，我们希望某个参数的值范围在 1-100 以内，那么我们会做如下检查和处理：")]),s._v(" "),t("div",{staticClass:"language-rust line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-rust"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" guess "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" guess "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("但是，这种处理方式存在一些问题：")]),s._v(" "),t("ul",[t("li",[s._v("如果函数只能处理 1-100 的这个特性很关键")]),s._v(" "),t("li",[s._v("而且如果存在很多函数都是要求这个特性")]),s._v(" "),t("li",[s._v("那么，在每个函数中都进行这样的检查会让代码非常冗余，甚至可能会影响程序的性能")])]),s._v(" "),t("p",[s._v("因此，可以自定义一个类型，并使用类型检查：")]),s._v(" "),t("div",{staticClass:"language-rust line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-rust"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("pub")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" Guess "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" i32"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("impl")]),s._v(" Guess "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("pub")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fn")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("new")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" i32"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("->")]),s._v(" Guess "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" value "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" value "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("panic!")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"invalid value"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n        Guess "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            value\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("pub")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fn")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("value")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("->")]),s._v(" i32 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("value\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br")])]),t("p",[s._v("剖析：")]),s._v(" "),t("ol",[t("li",[s._v("定义了 "),t("code",[s._v("Guess")]),s._v(" 这个 struct 类型，并通过它来存储 "),t("code",[s._v("i32")]),s._v(" 的 "),t("code",[s._v("value")])]),s._v(" "),t("li",[s._v("定义 "),t("code",[s._v("new")]),s._v(" 方法来创建 "),t("code",[s._v("Guess")]),s._v(" 实例")]),s._v(" "),t("li",[s._v("在 "),t("code",[s._v("new")]),s._v(" 方法中，若数值不合法，则程序 "),t("code",[s._v("panic!")]),s._v(" ，因为所传入的值违反了该函数的契约，并告知调用者需要修复该 bug ；否则创建 "),t("code",[s._v("Guess")]),s._v(" 并返回")]),s._v(" "),t("li",[s._v("在 API 文档中，需要描述这种可能导致 panic 的情况，在 Chapter14 中讨论")]),s._v(" "),t("li",[s._v("定义 "),t("code",[s._v("value")]),s._v(" 方法来返回该数值，这种方法就是 "),t("em",[s._v("getter")])]),s._v(" "),t("li",[s._v("为 "),t("code",[s._v("value")]),s._v(" 方法加上 pub 修饰是必须的，因为 struct 中 "),t("code",[s._v("value")]),s._v(" 这个 field 是 private")]),s._v(" "),t("li",[s._v("让 "),t("code",[s._v("value")]),s._v(" 这个 field 作为 private 成员是很重要的：外部使用者不能直接设置该值，而且只能通过 "),t("code",[s._v("new")]),s._v(" 方法来创建 "),t("code",[s._v("Guess")]),s._v(" 实例，进而也就确保了 "),t("code",[s._v("Guess")]),s._v(" 中的值是被检查过的")]),s._v(" "),t("li",[s._v("因此，当一个函数的参数或返回值要求在 1-100 之间时，就使用 "),t("code",[s._v("Guess")]),s._v(" 类型而不是 "),t("code",[s._v("i32")]),s._v(" 类型，这样在代码中就不再需要额外的错误检查")])]),s._v(" "),t("h3",{attrs:{id:"总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[s._v("#")]),s._v(" 总结")]),s._v(" "),t("ul",[t("li",[s._v("Rust 的错误处理机制可以帮助代码变得健壮")]),s._v(" "),t("li",[t("code",[s._v("panic!")]),s._v(" 表示程序遇到了无法处理的 state ，因此程序终止，而不是继续尝试处理无效或不正确的数据")]),s._v(" "),t("li",[t("code",[s._v("Result")]),s._v(" 表示在某些情形下，操作可能会失败，且代码需要处理这种失败的情况，因此，可以使用 "),t("code",[s._v("Result")]),s._v(" 来告知调用者需要同时处理成功和失败的情况")])])])}),[],!1,null,null,null);a.default=n.exports}}]);