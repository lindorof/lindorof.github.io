(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{556:function(v,_,l){"use strict";l.r(_);var t=l(27),e=Object(t.a)({},(function(){var v=this,_=v.$createElement,l=v._self._c||_;return l("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[l("h1",{attrs:{id:"c-c-程序运行时库"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#c-c-程序运行时库"}},[v._v("#")]),v._v(" C & C++ 程序运行时库")]),v._v(" "),l("h2",{attrs:{id:"概述"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[v._v("#")]),v._v(" 概述")]),v._v(" "),l("p",[v._v("运行时库是C/C++运行时所需的库，以 "),l("code",[v._v("LIB/DLL")]),v._v(" 的形式提供，运行时库有几个作用：")]),v._v(" "),l("ol",[l("li",[v._v("提供必要的库函数调用，例如 "),l("code",[v._v("strcpy")]),v._v(" , "),l("code",[v._v("memcpy")]),v._v(" , "),l("code",[v._v("malloc")]),v._v(" 等；")]),v._v(" "),l("li",[v._v("为应用程序添加启动函数，启动函数的主要功能为：\n"),l("ul",[l("li",[v._v("进行程序的初始化")]),v._v(" "),l("li",[v._v("对全局变量进行赋初值")]),v._v(" "),l("li",[v._v("加载用户程序的入口函数等")])])])]),v._v(" "),l("blockquote",[l("p",[v._v("运行时库诞生于20世纪70年代，从最开始的单线程运行时库演化到现在的多线程运行时库，因此有几个版本：")])]),v._v(" "),l("ol",[l("li",[v._v("SingleThread (LIB) "),l("code",[v._v("/ML")]),v._v(" ( "),l("code",[v._v("libc.lib")]),v._v(" )")]),v._v(" "),l("li",[v._v("MultiThread (LIB) "),l("code",[v._v("/MT")]),v._v(" ( "),l("code",[v._v("libcmt.lib")]),v._v(" )")]),v._v(" "),l("li",[v._v("MultiThread (DLL) "),l("code",[v._v("/MD")]),v._v(" ( "),l("code",[v._v("msvcrt.lib")]),v._v(" )")])]),v._v(" "),l("p",[v._v("其中：")]),v._v(" "),l("ol",[l("li",[v._v("每个运行时库都有 DEBUG 版本，对应的编译选项和所链接的库都是在末尾加上 "),l("code",[v._v("d")]),v._v(" ，例如 "),l("code",[v._v("/MTd")]),v._v(" ( "),l("code",[v._v("libcmtd.lib")]),v._v(" )")]),v._v(" "),l("li",[v._v("对于 "),l("code",[v._v("/MD")]),v._v("，运行时的 DLL 为 "),l("code",[v._v("msvcrtXXX.dll")]),v._v(" ，其中 "),l("code",[v._v("XXX")]),v._v(" 为版本号")])]),v._v(" "),l("p",[l("em",[l("strong",[v._v("单线程")])]),v._v(" 运行时库的特性：")]),v._v(" "),l("ol",[l("li",[v._v("只能用在单线程的程序中；")]),v._v(" "),l("li",[v._v("不具备多线程特性，例如 "),l("code",[v._v("errno")]),v._v(" 是全局的，多个线程可能相互修改和冲突，导致无法获取到正确的值；")])]),v._v(" "),l("p",[l("em",[l("strong",[v._v("多线程")])]),v._v(" 运行时库的特性：")]),v._v(" "),l("ol",[l("li",[v._v("可以用在多线程的程序中；")]),v._v(" "),l("li",[v._v("类似 "),l("code",[v._v("errno")]),v._v(" 这种全局变量，会为每个线程单独设置一个，从而每个线程的全局变量都是独立的，不会在多线程之间冲突；")]),v._v(" "),l("li",[v._v("多线程运行时库中的数据结构有同步保护机制，避免多线程访问的冲突；")])]),v._v(" "),l("h2",{attrs:{id:"ml"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#ml"}},[v._v("#")]),v._v(" "),l("code",[v._v("/ML")])]),v._v(" "),l("ol",[l("li",[v._v("只能用在 "),l("em",[l("strong",[v._v("单线程")])]),v._v(" 的程序中；")]),v._v(" "),l("li",[v._v("运行时库会编译在应用程序的二进制代码中；")]),v._v(" "),l("li",[v._v("因此 "),l("em",[l("strong",[v._v("应用程序拥有独立的运行时库")])]),v._v(" ；")])]),v._v(" "),l("h2",{attrs:{id:"mt"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#mt"}},[v._v("#")]),v._v(" "),l("code",[v._v("/MT")])]),v._v(" "),l("ol",[l("li",[v._v("可以用在 "),l("em",[l("strong",[v._v("多线程")])]),v._v(" 的程序中；")]),v._v(" "),l("li",[v._v("运行时库会编译在应用程序的二进制代码中；")]),v._v(" "),l("li",[v._v("因此 "),l("em",[l("strong",[v._v("应用程序拥有独立的运行时库")])]),v._v(" ；")]),v._v(" "),l("li",[v._v("如果应用程序是 DLL ，则 DLL 拥有自己独立的运行时库，那么，"),l("em",[l("strong",[v._v("DLL 自身分配的内存也只能由 DLL 进行释放")])]),v._v(" ，不能由调用者释放；")]),v._v(" "),l("li",[v._v("由于应用程序拥有独立的运行时库，因此应用程序 不会依赖于特定版本的系统运行时库 ；")])]),v._v(" "),l("h2",{attrs:{id:"md"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#md"}},[v._v("#")]),v._v(" "),l("code",[v._v("/MD")])]),v._v(" "),l("ol",[l("li",[v._v("可以用在 "),l("em",[l("strong",[v._v("多线程")])]),v._v(" 的程序中；")]),v._v(" "),l("li",[v._v("运行时库不会编译在应用程序的二进制代码中；")]),v._v(" "),l("li",[v._v("因此 "),l("em",[l("strong",[v._v("应用程序没有独立的运行时库")])]),v._v(" ；")]),v._v(" "),l("li",[v._v("所以，应用程序会依赖于系统的 "),l("code",[v._v("msvcrtXXX.dll")]),v._v(" ，且版本可能不同；")]),v._v(" "),l("li",[v._v("由于应用程序没有独立的运行时库，因此如果应用程序是DLL，则 "),l("em",[l("strong",[v._v("DLL自身分配的内存可以由调用者来释放")])]),v._v(" ；")]),v._v(" "),l("li",[v._v("但是，程序设计时，内存分配原则是「"),l("em",[l("strong",[v._v("谁分配则谁释放")])]),v._v("」，因此即使使用该编译选项，也不要让调用者释放DLL的内存；")])])])}),[],!1,null,null,null);_.default=e.exports}}]);