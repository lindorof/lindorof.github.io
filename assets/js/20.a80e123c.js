(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{555:function(v,_,t){"use strict";t.r(_);var e=t(27),a=Object(e.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h1",{attrs:{id:"多维数组-多维指针"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#多维数组-多维指针"}},[v._v("#")]),v._v(" 多维数组 & 多维指针")]),v._v(" "),t("h2",{attrs:{id:"引言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#引言"}},[v._v("#")]),v._v(" 引言")]),v._v(" "),t("ul",[t("li",[v._v("C的世界里，是没有所谓多维数组概念的，永远都是一维数组，或者说其实都是一维指针，通过一维指针来进行寻址；")]),v._v(" "),t("li",[v._v("而所谓的多维指针，可以理解为只是编译器为了方便程序开发，而对一维数组进行的二次包装而已；")])]),v._v(" "),t("h2",{attrs:{id:"一维数组"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一维数组"}},[v._v("#")]),v._v(" 一维数组")]),v._v(" "),t("p",[v._v("定义方式：")]),v._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[v._v("type t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[v._v("1025")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n")])]),v._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[v._v("1")]),t("br")])]),t("p",[v._v("说明：")]),v._v(" "),t("ul",[t("li",[v._v("此时 "),t("code",[v._v("t")]),v._v(" 的内存分配是连续的，大小是 "),t("code",[v._v("1025 * sizeof(type)")]),v._v(" ；")]),v._v(" "),t("li",[v._v("要索引第 x 个元素时，地址是 "),t("code",[v._v("t + x * sizeof(type)")]),v._v(" ；")])]),v._v(" "),t("h2",{attrs:{id:"二维-多维数组"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二维-多维数组"}},[v._v("#")]),v._v(" 二维/多维数组")]),v._v(" "),t("p",[v._v("定义方式：")]),v._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[v._v("type t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[v._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[v._v("1025")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n")])]),v._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[v._v("1")]),t("br")])]),t("p",[v._v("说明：")]),v._v(" "),t("ul",[t("li",[v._v("此时 t 的内存分配是连续的，大小是 "),t("code",[v._v("10 * 1025 * sizeof(type)")]),v._v(" ；")]),v._v(" "),t("li",[v._v("也就是说，其实可以理解为一维数组 "),t("code",[v._v("type t[10 * 1025]")]),v._v(" ；")]),v._v(" "),t("li",[v._v("但是既然定义为二维数组，那么编译器就支持按照二维数组的方式去索引；")]),v._v(" "),t("li",[v._v("因此索引方式是第 x 维的第 y 个元素，即 "),t("code",[v._v("t[x][y]")]),v._v(" ，地址是 "),t("code",[v._v("t + (x * 1025 + y) * sizeof(type)")]),v._v(" ；")])]),v._v(" "),t("p",[v._v("所以：")]),v._v(" "),t("ul",[t("li",[v._v("可以定义一个一维数组，但是强转为二维数组类型，并按照 "),t("code",[v._v("t[x][y]")]),v._v(" 的方式去索引元素；")]),v._v(" "),t("li",[v._v("也可以定义一个二维数组，但是强转为一维数组类型，并按照 "),t("code",[v._v("t[x]")]),v._v(" 的方式去索引元素；")]),v._v(" "),t("li",[v._v("因为不管几维数组，本质都是一维数组；")])]),v._v(" "),t("h2",{attrs:{id:"一维指针"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一维指针"}},[v._v("#")]),v._v(" 一维指针")]),v._v(" "),t("p",[v._v("定义方式：")]),v._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[v._v("type"),t("span",{pre:!0,attrs:{class:"token operator"}},[v._v("*")]),v._v(" t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n")])]),v._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[v._v("1")]),t("br")])]),t("p",[v._v("说明：")]),v._v(" "),t("ul",[t("li",[v._v("一旦类型为指针，则内存分配不一定是连续的，取决于指针的实际类型；")]),v._v(" "),t("li",[v._v("可能是数组，可能是被重载过运算符 "),t("code",[v._v("[]")]),v._v(" 的链表；")]),v._v(" "),t("li",[v._v("假设内存分配是连续的，则 "),t("code",[v._v("t[x]")]),v._v(" 的索引方式是："),t("code",[v._v("t + x * sizeof(type)")]),v._v(" ；")])]),v._v(" "),t("h2",{attrs:{id:"二维-多维指针"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二维-多维指针"}},[v._v("#")]),v._v(" 二维/多维指针")]),v._v(" "),t("p",[v._v("定义方式：")]),v._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[v._v("type"),t("span",{pre:!0,attrs:{class:"token operator"}},[v._v("*")]),v._v(" t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n")])]),v._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[v._v("1")]),t("br")])]),t("p",[v._v("说明：")]),v._v(" "),t("ul",[t("li",[v._v("如果 "),t("code",[v._v("type")]),v._v(" 是 "),t("code",[v._v("char*")]),v._v(" ，则二维指针就是 "),t("code",[v._v("char** t")]),v._v(" ；")]),v._v(" "),t("li",[v._v("所以，本质还是指针；")])]),v._v(" "),t("h2",{attrs:{id:"n维指针的本质"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#n维指针的本质"}},[v._v("#")]),v._v(" N维指针的本质")]),v._v(" "),t("ul",[t("li",[v._v("没有二维/多维指针的概念，永远都是指针，指针指向某种元素类型；")]),v._v(" "),t("li",[v._v("因此，如果指针所指向的元素类型也是指针，则从定义方式上看就像多维指针；")]),v._v(" "),t("li",[v._v("所以，对于 "),t("code",[v._v("type* t")]),v._v(" ，索引该指针的第 x 个元素，地址就是："),t("code",[v._v("t + x * sizeof(type)")]),v._v(" ；")])]),v._v(" "),t("h2",{attrs:{id:"数组与指针的转换"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数组与指针的转换"}},[v._v("#")]),v._v(" 数组与指针的转换")]),v._v(" "),t("blockquote",[t("p",[v._v("一维数组与指针")])]),v._v(" "),t("ul",[t("li",[v._v("数组："),t("code",[v._v("type t1[1025]")])]),v._v(" "),t("li",[v._v("指针："),t("code",[v._v("type* t2")])]),v._v(" "),t("li",[v._v("则 "),t("code",[v._v("t1")]),v._v(" 与 "),t("code",[v._v("t2")]),v._v(" 是等价的；")]),v._v(" "),t("li",[v._v("对指针来说，丢失了实际数组大小的信息；")])]),v._v(" "),t("blockquote",[t("p",[v._v("二维数组与指针")])]),v._v(" "),t("ul",[t("li",[v._v("数组："),t("code",[v._v("type t1[10][1025]")])]),v._v(" "),t("li",[v._v("可以转换为："),t("code",[v._v("type t2[][1025]")])]),v._v(" "),t("li",[v._v("可以转换为："),t("code",[v._v("type (*t3)[1025]")])]),v._v(" "),t("li",[v._v("则 "),t("code",[v._v("t1")]),v._v(" 、"),t("code",[v._v("t2")]),v._v(" 、"),t("code",[v._v("t3")]),v._v(" 是等价的；")]),v._v(" "),t("li",[v._v("也就是说，第二维的大小都是必须定义的，但第一维的本质其实也就是指针，只是这个指针指向的是一个 "),t("code",[v._v("[1025]")]),v._v(" 的数组；")]),v._v(" "),t("li",[v._v("对 "),t("code",[v._v("t2")]),v._v(" 来说，第一维可以定义，也可以忽略；")]),v._v(" "),t("li",[v._v("对 "),t("code",[v._v("t3")]),v._v(" 来说，第一维的大小是丢失的，此时 "),t("code",[v._v("t3")]),v._v(" 是一个指向数组的指针")]),v._v(" "),t("li",[v._v("也就是说 "),t("code",[v._v("t3")]),v._v(" 这个指针，指向的元素类型是 "),t("code",[v._v("[1025]")]),v._v(" 的数组；")])]),v._v(" "),t("blockquote",[t("p",[v._v("多维数组与指针")])]),v._v(" "),t("ul",[t("li",[v._v("依据二维的规则类推；")]),v._v(" "),t("li",[v._v("数组："),t("code",[v._v("type t1[10][20][1025]")])]),v._v(" "),t("li",[v._v("可以转换为："),t("code",[v._v("type t2[][20][1025]")])]),v._v(" "),t("li",[v._v("可以转换为："),t("code",[v._v("type (*t3)[20][1025]")])]),v._v(" "),t("li",[v._v("总之，"),t("em",[t("strong",[v._v("只有第一维的大小可以省略，后续的维度大小都必须声明清楚")])]),v._v(" ；")])]),v._v(" "),t("h2",{attrs:{id:"总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[v._v("#")]),v._v(" 总结")]),v._v(" "),t("blockquote",[t("p",[v._v("先重申下述结论")])]),v._v(" "),t("ul",[t("li",[v._v("所谓的多维数组，本质都是一个内存连续的一维数组，而多维数组的 "),t("code",[v._v("t[x][y]")]),v._v(" 用法只是编译器提供的福利；")]),v._v(" "),t("li",[v._v("所谓的多维指针，本质都是指针，没有维度的概念，只是指向某种元素的指针；")]),v._v(" "),t("li",[v._v("数组和指针的区别，本质就是 "),t("em",[t("strong",[v._v("寻址方式")])]),v._v(" 的区别；")])]),v._v(" "),t("blockquote",[t("p",[v._v("数组的寻址方式")])]),v._v(" "),t("ul",[t("li",[t("code",[v._v("type t[1025]")]),v._v(" ，则 "),t("code",[v._v("t[x]")]),v._v(" 的寻址方式是："),t("code",[v._v("t + x * sizeof(type)")])]),v._v(" "),t("li",[t("code",[v._v("type t[10][1025]")]),v._v(" ，则 "),t("code",[v._v("t[x][y]")]),v._v(" 的寻址方式是："),t("code",[v._v("t + (x * 1025 + y) * sizeof(type)")])])]),v._v(" "),t("blockquote",[t("p",[v._v("指针的寻址方式")])]),v._v(" "),t("ul",[t("li",[t("code",[v._v("type* t")]),v._v(" ，则 "),t("code",[v._v("t[x]")]),v._v(" 的寻址方式是："),t("code",[v._v("t + x * sizeof(type)")])])]),v._v(" "),t("h2",{attrs:{id:"陷阱"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#陷阱"}},[v._v("#")]),v._v(" 陷阱")]),v._v(" "),t("blockquote",[t("p",[v._v("二维数组不能直接强转为二维指针，因为寻址方式不同：")])]),v._v(" "),t("ul",[t("li",[t("code",[v._v("char t[10][1025]")]),v._v(" ，在使用 "),t("code",[v._v("t[x]")]),v._v(" 时，编译器会自动进行 "),t("code",[v._v("x*1025")]),v._v(" 的地址跳转；")]),v._v(" "),t("li",[t("code",[v._v("char** t")]),v._v(" ，在使用 "),t("code",[v._v("t[x]")]),v._v(" 时，编译器只会进行 "),t("code",[v._v("t + x * sizeof(char*)")]),v._v(" 的跳转；")])]),v._v(" "),t("blockquote",[t("p",[v._v("所以，多维数组转换为指针时要注意：")])]),v._v(" "),t("ul",[t("li",[v._v("只有第一维的大小能够忽略")]),v._v(" "),t("li",[v._v("剩余其它维的大小都必须保留")]),v._v(" "),t("li",[v._v("因为必须告知其它维度的大小，编译器才能有效的进行地址跳转")])])])}),[],!1,null,null,null);_.default=a.exports}}]);