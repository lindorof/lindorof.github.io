(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{548:function(t,s,a){"use strict";a.r(s);var n=a(27),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"_3-2-数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-数据类型"}},[t._v("#")]),t._v(" 3.2. 数据类型")]),t._v(" "),a("p",[t._v("Rust的数据类型有两大子集：")]),t._v(" "),a("ul",[a("li",[t._v("Scalar")]),t._v(" "),a("li",[t._v("Compound")])]),t._v(" "),a("h2",{attrs:{id:"scalar-types"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scalar-types"}},[t._v("#")]),t._v(" Scalar Types")]),t._v(" "),a("p",[t._v("Scalar子集里有四种数据类型：")]),t._v(" "),a("ol",[a("li",[t._v("整型")]),t._v(" "),a("li",[t._v("浮点")]),t._v(" "),a("li",[t._v("布尔")]),t._v(" "),a("li",[t._v("字符")])]),t._v(" "),a("h3",{attrs:{id:"整型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#整型"}},[t._v("#")]),t._v(" 整型")]),t._v(" "),a("p",[t._v("整型分为：")]),t._v(" "),a("ul",[a("li",[t._v("有符号，用 i 开头")]),t._v(" "),a("li",[t._v("无符号，用 u 开头")])]),t._v(" "),a("p",[t._v("整型类型汇总：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("长度")]),t._v(" "),a("th",[t._v("有符号")]),t._v(" "),a("th",[t._v("无符号")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("8-bit")]),t._v(" "),a("td",[t._v("i8")]),t._v(" "),a("td",[t._v("u8")])]),t._v(" "),a("tr",[a("td",[t._v("16-bit")]),t._v(" "),a("td",[t._v("i16")]),t._v(" "),a("td",[t._v("u16")])]),t._v(" "),a("tr",[a("td",[t._v("32-bit")]),t._v(" "),a("td",[t._v("i32")]),t._v(" "),a("td",[t._v("u32")])]),t._v(" "),a("tr",[a("td",[t._v("64-bit")]),t._v(" "),a("td",[t._v("i64")]),t._v(" "),a("td",[t._v("u64")])]),t._v(" "),a("tr",[a("td",[t._v("128-bit")]),t._v(" "),a("td",[t._v("i128")]),t._v(" "),a("td",[t._v("u128")])]),t._v(" "),a("tr",[a("td",[t._v("arch")]),t._v(" "),a("td",[t._v("isize")]),t._v(" "),a("td",[t._v("usize")])])])]),t._v(" "),a("p",[t._v("关于arch：")]),t._v(" "),a("ul",[a("li",[t._v("取决于操作系统")]),t._v(" "),a("li",[t._v("若系统是32位，则长度为32bit")]),t._v(" "),a("li",[t._v("若系统是64位，则长度为64bit")])]),t._v(" "),a("p",[t._v("存储范围：")]),t._v(" "),a("ul",[a("li",[t._v("有符号："),a("code",[t._v("$-(2^{n-1})$")]),t._v(" 至  "),a("code",[t._v("$(2^{n-1}-1)$")])]),t._v(" "),a("li",[t._v("无符号："),a("code",[t._v("$0$")]),t._v(" 至 "),a("code",[t._v("$(2^n-1)$")])]),t._v(" "),a("li",[t._v("例如，i8 的范围是 -128 至 127")]),t._v(" "),a("li",[t._v("例如，u8 的范围是 0 至 255")])]),t._v(" "),a("p",[t._v("整型的书写方式包括三部分：")]),t._v(" "),a("ol",[a("li",[t._v("类型前缀\n"),a("ul",[a("li",[t._v("十进制：无")]),t._v(" "),a("li",[t._v("十六进制：0x")]),t._v(" "),a("li",[t._v("八进制：0o")]),t._v(" "),a("li",[t._v("二进制：0b")])])]),t._v(" "),a("li",[t._v("分隔符'_'\n"),a("ul",[a("li",[t._v("目的只是为了阅读方便，例如：")]),t._v(" "),a("li",[t._v("98_222")]),t._v(" "),a("li",[t._v("0xf1_ed_23_01")]),t._v(" "),a("li",[t._v("0b1101_0010")])])]),t._v(" "),a("li",[t._v("类型后缀\n"),a("ul",[a("li",[t._v("目的是为了标识该数值的大小，例如：")]),t._v(" "),a("li",[t._v("57u8")]),t._v(" "),a("li",[t._v("0xf1_02i64")])])])]),t._v(" "),a("p",[t._v("分隔符'_'进一步说明：")]),t._v(" "),a("ul",[a("li",[t._v("在整型中，分隔符的作用只是为了代码阅读方便")]),t._v(" "),a("li",[t._v("对编译器来说，分隔符其实是被忽略的")]),t._v(" "),a("li",[t._v("因此，分隔符的位置并不会影响实际的数值内容")]),t._v(" "),a("li",[t._v("例如，0x0102、0x01_02、0x0_1_0_2是一样的")]),t._v(" "),a("li",[t._v("因此，我会习惯于将类型前缀、数值、类型后缀等几个要素都用分隔符分开，让阅读更清晰，例如：")])]),t._v(" "),a("div",{staticClass:"language-rust line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-rust"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" x1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9_888")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" x2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9_888_u32")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" x3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 0x_01_02"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" x4 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 0x_01_02_i64"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" x5 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 0b_1101_0010"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" x6 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 0b_1101_0010_u8"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("p",[t._v("类型后缀的进一步说明：")]),t._v(" "),a("ol",[a("li",[t._v("可通过后缀来标识该数值的bit大小")]),t._v(" "),a("li",[t._v("若将数值绑定到变量，则编译器就根据该数值的后缀所标识的大小来得到变量的类型")]),t._v(" "),a("li",[t._v("因此，若变量声明了类型，数值也有类型后缀，则变量类型和后缀类型不一致时，编译错误")])]),t._v(" "),a("p",[t._v("如何决定使用什么类型：")]),t._v(" "),a("ul",[a("li",[t._v("Rust对于整型数值默认为i32")]),t._v(" "),a("li",[t._v("而i32类型是运算速度最快的，即使在64位系统中")]),t._v(" "),a("li",[t._v("注意，意思就是说，即使在64位系统中，Rust默认的整型也是i32，除非使用isize或usize")]),t._v(" "),a("li",[t._v("因此，使用默认的i32整型是最好的选择")])]),t._v(" "),a("p",[t._v("整型的溢出：")]),t._v(" "),a("ul",[a("li",[t._v("基于前面讨论的整形存储范围，溢出可以理解为循环")]),t._v(" "),a("li",[t._v("例如，对于u8，范围是0~255，则溢出后，256变为0，257变为1")]),t._v(" "),a("li",[t._v("例如，对于i8，范围是-128~127，则溢出后，128变为-128，129变为-1")])]),t._v(" "),a("p",[t._v("对溢出的处理：")]),t._v(" "),a("ul",[a("li",[t._v("Debug模式下，若发生了溢出，则运行效果就是panic")]),t._v(" "),a("li",[t._v("Release模式下，则按照正常的上述溢出逻辑运行")])]),t._v(" "),a("h3",{attrs:{id:"浮点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浮点"}},[t._v("#")]),t._v(" 浮点")]),t._v(" "),a("p",[t._v("Rust的浮点数基于 ==IEEE-754== 标准：")]),t._v(" "),a("ul",[a("li",[t._v("f32，32-bit，单精度浮点数")]),t._v(" "),a("li",[t._v("f64，64-bit，双精度浮点数")])]),t._v(" "),a("p",[t._v("浮点数的书写方式：")]),t._v(" "),a("ol",[a("li",[t._v("只能是十进制方式，因此不允许十六进制、八进制、二进制等类型前缀")]),t._v(" "),a("li",[t._v("可以任意使用分隔符，与整型类型")]),t._v(" "),a("li",[t._v("可以有类型后缀，例如：")])]),t._v(" "),a("div",{staticClass:"language-rust line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-rust"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" f0 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2198.36")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" f1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2_198.36")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" f2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2_198.36_f32")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" f3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2_198.36_f64")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("如何决定使用什么类型：")]),t._v(" "),a("ul",[a("li",[t._v("Rust对于浮点数默认为f64")]),t._v(" "),a("li",[t._v("因为对现在的CPU来说，f64和f32的运算速度差不多，但f64能容纳更高的精度")]),t._v(" "),a("li",[t._v("因此使用默认的f64是最好的选择")])]),t._v(" "),a("h3",{attrs:{id:"布尔"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#布尔"}},[t._v("#")]),t._v(" 布尔")]),t._v(" "),a("ul",[a("li",[t._v("关键字是 bool")]),t._v(" "),a("li",[t._v("值有 true 和 false")]),t._v(" "),a("li",[t._v("布尔型的空间大小：1个字节")]),t._v(" "),a("li",[t._v("布尔型最多的使用场景就是通过 if 进行条件判断")])]),t._v(" "),a("p",[t._v("例如：")]),t._v(" "),a("div",{staticClass:"language-rust line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-rust"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" b1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" b2 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" bool "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("h3",{attrs:{id:"字符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符"}},[t._v("#")]),t._v(" 字符")]),t._v(" "),a("ul",[a("li",[t._v("关键字是char，但没必要显式声明")]),t._v(" "),a("li",[t._v("使用单引号'来表示一个字符，例如'A'")]),t._v(" "),a("li",[t._v("Rust的char可以表示UNICODE中的字符范围：U+0000 ~ U+D7FF , U+E000 ~ U+10FFFF，其中就包含了 zero-width 字符")]),t._v(" "),a("li",[t._v("因此字符除了ASCII外，还可以是中文字符，日文字符，emoji字符")]),t._v(" "),a("li",[t._v("==基于存储方式（UTF-8），所以Rust中char的空间大小：4个字节==")])]),t._v(" "),a("p",[t._v("关于 zero-width 字符：")]),t._v(" "),a("ul",[a("li",[t._v("Unicode中有一些字符叫做 zero-width ，意思就是：它是一个字符，有Unicode编码，但是没有宽度")]),t._v(" "),a("li",[t._v("通俗解释：比如在两个字符中间加入一个 zero-width 字符，则这两个字符仍然是挨在一起的，但是移动一次光标发现光标不动，因为中间有一个 zero-width 字符")]),t._v(" "),a("li",[t._v("因此，zero-width 字符并不是 "),a("code",[t._v("''")]),t._v(" ，比如 "),a("code",[t._v("let c = ''")]),t._v(" 是不被允许，因为 rust 没有 "),a("code",[t._v("空值")]),t._v(" 的概念")])]),t._v(" "),a("p",[t._v("下面是几种 zero-width 字符：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Unicode值")]),t._v(" "),a("th",[t._v("UTF-8存储值")]),t._v(" "),a("th",[t._v("NAME")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("U+200B")]),t._v(" "),a("td",[t._v("\\xe2\\x80\\x8b")]),t._v(" "),a("td",[t._v("ZERO WIDTH SPACE")])]),t._v(" "),a("tr",[a("td",[t._v("U+200C")]),t._v(" "),a("td",[t._v("\\xe2\\x80\\x8c")]),t._v(" "),a("td",[t._v("ZERO WIDTH NON-JOINER")])]),t._v(" "),a("tr",[a("td",[t._v("U+200D")]),t._v(" "),a("td",[t._v("\\xe2\\x80\\x8d")]),t._v(" "),a("td",[t._v("ZERO WIDTH JOINER")])])])]),t._v(" "),a("p",[t._v("字符的书写方式：")]),t._v(" "),a("ol",[a("li",[t._v("直接通过单引号'来表示")]),t._v(" "),a("li",[t._v("不允许类型前缀，不允许_分隔符，不允许类型后缀")]),t._v(" "),a("li",[t._v("因为通过单引号就足以表示一个字符的信息")])]),t._v(" "),a("p",[t._v("例如：")]),t._v(" "),a("div",{staticClass:"language-rust line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-rust"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" c1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token char string"}},[t._v("'A'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" c2 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" char "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token char string"}},[t._v("'B'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" c3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token char string"}},[t._v("'我'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("可以将字符值赋值给整型，但限制如下：")]),t._v(" "),a("ol",[a("li",[t._v("必须增加类型前缀'b'")]),t._v(" "),a("li",[t._v("只支持u8类型，也就是Byte")])]),t._v(" "),a("p",[t._v("举例：")]),t._v(" "),a("div",{staticClass:"language-rust line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-rust"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//字符类型")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token char string"}},[t._v("'A'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//字符类型")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" c2 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" char "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token char string"}},[t._v("'B'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//u8类型，值是65")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" c3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token char string"}},[t._v("b'A'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//u8类型，值是65")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" c4 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" u8 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token char string"}},[t._v("b'A'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br")])]),a("h2",{attrs:{id:"compound-types"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#compound-types"}},[t._v("#")]),t._v(" Compound Types")]),t._v(" "),a("p",[t._v("Compound子集中有两种数据类型：")]),t._v(" "),a("ol",[a("li",[t._v("Tuple")]),t._v(" "),a("li",[t._v("Array")])]),t._v(" "),a("h3",{attrs:{id:"tuple"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tuple"}},[t._v("#")]),t._v(" Tuple")]),t._v(" "),a("p",[t._v("说明：")]),t._v(" "),a("ul",[a("li",[t._v("使用括号表示，多个值用逗号分隔")]),t._v(" "),a("li",[t._v("各个值的数据类型可以不一致")]),t._v(" "),a("li",[t._v("例如 (1, 1.5, true, 'A')")]),t._v(" "),a("li",[t._v("tuple在声明时就必须确定各个值，且一旦声明结束，空间大小就是固定的，后续不能再增大或减小")])]),t._v(" "),a("p",[t._v("数据类型的确定：")]),t._v(" "),a("ul",[a("li",[t._v("基于Scalar章节的内容，若不指定数据类型，则Rust会有对应的默认数据类型")]),t._v(" "),a("li",[t._v("也可显式指定数据类型，例如 (i32, f64, bool, char)")])]),t._v(" "),a("p",[t._v("举例：")]),t._v(" "),a("div",{staticClass:"language-rust line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-rust"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//使用默认数据类型")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" tup1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("86")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token char string"}},[t._v("'我'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//指定数据类型")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" tup2 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i16"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" f64"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bool"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" char"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("86")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token char string"}},[t._v("'我'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指定数据类型")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" tup3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("86_i128"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.2_f64")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token char string"}},[t._v("'我'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token char string"}},[t._v("b'A'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("p",[t._v("解构Tuple的方式一：模式匹配")]),t._v(" "),a("div",{staticClass:"language-rust line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-rust"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" tup "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6.4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" z"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tup"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println!")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{} - {} - {}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" z"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("解构Tuple的方式二：下标访问")]),t._v(" "),a("div",{staticClass:"language-rust line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-rust"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" tup "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6.4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println!")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{} - {} - {}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tup"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tup"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tup"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("blockquote",[a("p",[t._v("注意：下标从0开始")])]),t._v(" "),a("h3",{attrs:{id:"array"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#array"}},[t._v("#")]),t._v(" Array")]),t._v(" "),a("p",[t._v("说明:")]),t._v(" "),a("ul",[a("li",[t._v("在array中的数据类型是一致的")]),t._v(" "),a("li",[t._v("声明结束后，array的大小就是固定的，不会增加也不会减小，即使array中元素的内容可能会变化")])]),t._v(" "),a("blockquote",[a("p",[t._v("注意：Vector的空间大小是可变的，在Chapter8会讨论")])]),t._v(" "),a("p",[t._v("声明语法 & 数据类型 & 元素个数：")]),t._v(" "),a("ul",[a("li",[t._v("let a = [1,2,3,4,5]，编译器会自动推断数据类型和元素个数，当然，数据类型仍然是基于Rust默认的数据类型")]),t._v(" "),a("li",[t._v("let a : [i64;5] = [1,2,3,4,5]，即显式声明数据类型和元素个数，使用';'分隔，二者都必须同时存在，且声明的元素个数必须与实际的元素个数一致")])]),t._v(" "),a("p",[t._v("使用array的场景：")]),t._v(" "),a("ol",[a("li",[t._v("元素个数确定时，例如一年的12个月的名称")]),t._v(" "),a("li",[t._v("希望数据分配在栈上而不是堆上时")])]),t._v(" "),a("p",[t._v("访问array中的元素：")]),t._v(" "),a("ul",[a("li",[t._v("由于array的内存是连续的，因此可直接通过下标访问")]),t._v(" "),a("li",[t._v("访问语法：a[0]")])]),t._v(" "),a("blockquote",[a("p",[t._v("注意：下标从0开始")])]),t._v(" "),a("p",[t._v("越界访问array元素：")]),t._v(" "),a("ul",[a("li",[t._v("即下标值超过数组实际大小时")]),t._v(" "),a("li",[t._v("编译期间可能是正常的")]),t._v(" "),a("li",[t._v("但运行时程序会panic")]),t._v(" "),a("li",[t._v("这与其它某些语言不一样，例如C++")]),t._v(" "),a("li",[t._v("对于Rust来说，越界访问array时的panic是一种安全的机制，而不是仍然允许访问内存进而导致内存错误")])]),t._v(" "),a("blockquote",[a("p",[t._v("下面举几个有趣的越界访问array的例子，运行时都会导致panic，但在编译期间的结果提示会不同：")])]),t._v(" "),a("p",[t._v("例：check正常，build报错")]),t._v(" "),a("div",{staticClass:"language-rust line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-rust"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println!")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("例：check正常，build正常，运行panic")]),t._v(" "),a("div",{staticClass:"language-rust line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-rust"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println!")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])])])}),[],!1,null,null,null);s.default=r.exports}}]);