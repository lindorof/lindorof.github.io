(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{553:function(t,s,a){"use strict";a.r(s);var n=a(27),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"net搜索dll的方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#net搜索dll的方式"}},[t._v("#")]),t._v(" .NET搜索DLL的方式")]),t._v(" "),a("p",[a("em",[t._v("针对加载DLL的每种方式，分别说明对应.NET是如何去寻找DLL的。")])]),t._v(" "),a("h2",{attrs:{id:"直接引用加载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#直接引用加载"}},[t._v("#")]),t._v(" 直接引用加载")]),t._v(" "),a("h3",{attrs:{id:"引用方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#引用方式"}},[t._v("#")]),t._v(" 引用方式")]),t._v(" "),a("p",[t._v("也就是在代码工程里，引用位置直接添加DLL：")]),t._v(" "),a("ul",[a("li",[t._v("此时，程序运行时寻找DLL的路径与引用时所添加的DLL本身的路径没有关系")]),t._v(" "),a("li",[t._v("可以理解为引用就是像C++ DLL的静态加载，只是一个LIB库和头文件用来告知DLL可使用的方法和参数")]),t._v(" "),a("li",[t._v("而程序运行时的DLL寻找与C++ DLL类似，会在 "),a("em",[a("strong",[t._v("环境变量")])]),t._v(" 里去寻找")])]),t._v(" "),a("h3",{attrs:{id:"环境变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#环境变量"}},[t._v("#")]),t._v(" 环境变量")]),t._v(" "),a("blockquote",[a("p",[t._v("第一")])]),t._v(" "),a("p",[t._v(".NET FRAMWORK的 "),a("em",[a("strong",[t._v("全局库")])]),t._v(" 路径。")]),t._v(" "),a("blockquote",[a("p",[t._v("第二")])]),t._v(" "),a("p",[a("em",[a("strong",[t._v("所属EXE程序的当前路径")])]),t._v("。也就是说，无论DLL的引用者是EXE还是DLL，都会在所属EXE程序的当前路径寻找。")]),t._v(" "),a("blockquote",[a("p",[t._v("第三")])]),t._v(" "),a("p",[a("em",[a("strong",[t._v("MODULE的当前路径")])]),t._v("。注：所谓的MODULE就是对该DLL的引用者，可能是一个EXE来引用该DLL，也可能是一个DLL来引用该DLL：")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("如果MODULE本身是EXE，那也就是EXE程序的当前路径；")])]),t._v(" "),a("li",[a("p",[t._v("如果MODULE本身是DLL，那就是这个DLL所在的路径，而这个MODULE(DLL)可能与EXE并不在一个路径；")])])]),t._v(" "),a("blockquote",[a("p",[t._v("第四")])]),t._v(" "),a("p",[t._v("在 "),a("em",[a("strong",[a("code",[t._v("xxx.exe.config")])])]),t._v(" 文件里配置的其它路径。")]),t._v(" "),a("ul",[a("li",[t._v("配置在 "),a("code",[t._v("runtime/assemblyBinding/probing")]),t._v(" 节点的 "),a("code",[t._v("privatePath")]),t._v(" 属性中")]),t._v(" "),a("li",[t._v("多个路径通过 "),a("code",[t._v(";")]),t._v(" 分隔，举例如下：")])]),t._v(" "),a("div",{staticClass:"language-xml line-numbers-mode"},[a("div",{staticClass:"highlight-lines"},[a("br"),a("br"),a("br"),a("br"),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("br"),a("br"),a("br"),a("br")]),a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token prolog"}},[t._v('<?xml version="1.0"?>')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("configuration")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("runtime")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("assemblyBinding")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("xmlns")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("urn:schemas-microsoft-com:asm.v1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("probing")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("privatePath")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("LC1;LC1\\LC2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("assemblyBinding")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("runtime")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("configuration")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("h2",{attrs:{id:"反射调用加载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#反射调用加载"}},[t._v("#")]),t._v(" 反射调用加载")]),t._v(" "),a("h3",{attrs:{id:"代码规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代码规则"}},[t._v("#")]),t._v(" 代码规则")]),t._v(" "),a("p",[t._v("这个就比较直白了，代码里直接写明要加载的DLL名称和路径，如下：")]),t._v(" "),a("div",{staticClass:"language-csharp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-csharp"}},[a("code",[t._v("Assembly"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("LoadFrom")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"ClassLibrary1.dll"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nAssembly"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("LoadFrom")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"C:\\a\\b\\ClassLibrary1.dll"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("h3",{attrs:{id:"寻找规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#寻找规则"}},[t._v("#")]),t._v(" 寻找规则")]),t._v(" "),a("ol",[a("li",[t._v("直接按照代码中所 "),a("em",[a("strong",[t._v("指定的路径和名称")])]),t._v(" 进行寻找；")]),t._v(" "),a("li",[t._v("如果只有DLL名称但没有DLL路径：\n"),a("ul",[a("li",[t._v("则只会在 "),a("em",[a("strong",[t._v("所属EXE程序的当前路径")])]),t._v(" 寻找，无论反射DLL的MODULE是EXE还是DLL；")]),t._v(" "),a("li",[t._v("而不会在MODULE的当前路径寻找，也不会在 "),a("code",[t._v("xxx.exe.config")]),t._v(" 配置的路径寻找；")])])])])])}),[],!1,null,null,null);s.default=r.exports}}]);