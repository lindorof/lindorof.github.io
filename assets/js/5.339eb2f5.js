(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{458:function(s,t,a){s.exports=a.p+"assets/img/01.953ee518.jpg"},459:function(s,t,a){s.exports=a.p+"assets/img/02.9e24b22e.jpg"},460:function(s,t,a){s.exports=a.p+"assets/img/03.36af45f2.jpg"},461:function(s,t,a){s.exports=a.p+"assets/img/04.b2f8637a.jpg"},474:function(s,t,a){"use strict";a.r(t);var e=a(27),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"函数调用约定与函数导出"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#函数调用约定与函数导出"}},[s._v("#")]),s._v(" 函数调用约定与函数导出")]),s._v(" "),e("p",[e("em",[s._v("本文分为两大部分，「调用约定」和「函数导出」，然后在末尾对一些话题进行较浅的拓展。")])]),s._v(" "),e("h2",{attrs:{id:"调用约定-概述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#调用约定-概述"}},[s._v("#")]),s._v(" 调用约定 - 概述")]),s._v(" "),e("p",[s._v("我们熟知的函数由几个部分组成：")]),s._v(" "),e("ol",[e("li",[s._v("返回值类型；")]),s._v(" "),e("li",[s._v("函数名称；")]),s._v(" "),e("li",[s._v("参数（参数类型和个数）；")])]),s._v(" "),e("p",[s._v("而事实上，函数还有一个很重要的组成部分："),e("em",[e("strong",[s._v("调用约定")])]),s._v(" ，也就是对函数调用的约束和规定，它决定了以下内容：")]),s._v(" "),e("ol",[e("li",[s._v("函数参数的压栈顺序；")]),s._v(" "),e("li",[s._v("由调用者还是被调用者进行函数栈的清理；")]),s._v(" "),e("li",[s._v("对函数名称的修饰方式；")])]),s._v(" "),e("p",[s._v("常见的函数调用约定有：")]),s._v(" "),e("ol",[e("li",[s._v("__cdecl")]),s._v(" "),e("li",[s._v("__stdcall")]),s._v(" "),e("li",[s._v("__fastcall")]),s._v(" "),e("li",[s._v("__thiscall")])]),s._v(" "),e("blockquote",[e("p",[s._v("备注：")]),s._v(" "),e("ul",[e("li",[s._v('VC中常见的一些宏例如“WINAPI”、"CALLBACK"，其实就是__stdcall；')]),s._v(" "),e("li",[s._v("从调用约定所影响的内容来看，主要是两大方面："),e("em",[e("strong",[s._v("函数栈区的影响")])]),s._v("、"),e("em",[e("strong",[s._v("函数名称修饰的影响")])]),s._v(" ；")])])]),s._v(" "),e("h2",{attrs:{id:"调用约定-对函数栈区的影响"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#调用约定-对函数栈区的影响"}},[s._v("#")]),s._v(" 调用约定 - 对函数栈区的影响")]),s._v(" "),e("h3",{attrs:{id:"cdecl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cdecl"}},[s._v("#")]),s._v(" __cdecl")]),s._v(" "),e("ol",[e("li",[s._v("C/C++默认的调用约定；")]),s._v(" "),e("li",[s._v("函数参数 "),e("em",[e("strong",[s._v("从右到左")])]),s._v(" 入栈；")]),s._v(" "),e("li",[s._v("函数调用结束后，由 "),e("em",[e("strong",[s._v("调用者")])]),s._v(" 进行栈区的清理；")]),s._v(" "),e("li",[s._v("问题：不同编译器设定的栈结构不尽相同，跨开发平台时由函数调用者清理栈区不可行；")]),s._v(" "),e("li",[s._v("问题：每次调用都包含清理栈区的代码，故可执行文件较大；")]),s._v(" "),e("li",[s._v("优点：像 printf 这种具有可变参的函数，只有调用者知道实际参数是多少个，决定了这种函数只能使用这种调用约定；")])]),s._v(" "),e("h3",{attrs:{id:"stdcall"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#stdcall"}},[s._v("#")]),s._v(" __stdcall")]),s._v(" "),e("ol",[e("li",[s._v("Windows API默认的调用约定；")]),s._v(" "),e("li",[s._v("函数参数 "),e("em",[e("strong",[s._v("从右到左")])]),s._v(" 入栈；")]),s._v(" "),e("li",[s._v("函数调用结束后，由 "),e("em",[e("strong",[s._v("被调用者")])]),s._v(" 进行栈区的清理；")])]),s._v(" "),e("h3",{attrs:{id:"fastcall"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fastcall"}},[s._v("#")]),s._v(" __fastcall")]),s._v(" "),e("ol",[e("li",[s._v("适用于对性能要求较高的场合；")]),s._v(" "),e("li",[e("em",[e("strong",[s._v("从左开始不大于4字节")])]),s._v(" 的参数放入CPU的ECX和EDX寄存器，其余参数 "),e("em",[e("strong",[s._v("从右向左")])]),s._v(" 入栈；")]),s._v(" "),e("li",[s._v("函数调用结束后，由 "),e("em",[e("strong",[s._v("被调用者")])]),s._v(" 进行栈区的清理；")]),s._v(" "),e("li",[s._v("优点：如果参数不大于4字节，则这种调用约定可提高性能；")])]),s._v(" "),e("h3",{attrs:{id:"thiscall"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#thiscall"}},[s._v("#")]),s._v(" __thiscall")]),s._v(" "),e("ol",[e("li",[s._v("C++类成员函数缺省的调用约定，不需要也不能显式声明；")]),s._v(" "),e("li",[s._v("因为C++类成员函数的调用会自动传入 this 这个指针参数；")]),s._v(" "),e("li",[s._v("函数参数："),e("em",[e("strong",[s._v("从右到左")])]),s._v(" 入栈；")]),s._v(" "),e("li",[s._v("this 指针参数：\n"),e("ul",[e("li",[s._v("若参数个数确定，则通过ECX传递给被调用者；")]),s._v(" "),e("li",[s._v("若参数个数不确定，则在所有参数入栈后再被压入栈；")])])]),s._v(" "),e("li",[s._v("栈区清理：\n"),e("ul",[e("li",[s._v("若参数个数确定，则 "),e("em",[e("strong",[s._v("被调用者")])]),s._v(" 清理；")]),s._v(" "),e("li",[s._v("若参数个数不确定，则 "),e("em",[e("strong",[s._v("调用者")])]),s._v(" 清理；")])])])]),s._v(" "),e("h2",{attrs:{id:"调用约定-对函数名称修饰的影响-c编译器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#调用约定-对函数名称修饰的影响-c编译器"}},[s._v("#")]),s._v(" 调用约定 - 对函数名称修饰的影响 - C编译器")]),s._v(" "),e("h3",{attrs:{id:"cdecl-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cdecl-2"}},[s._v("#")]),s._v(" __cdecl")]),s._v(" "),e("ul",[e("li",[s._v("规则：一个下划线前缀，函数名；")]),s._v(" "),e("li",[s._v("格式：_FunctionName；")]),s._v(" "),e("li",[s._v("例如：void Input(int a, int b) 被修饰为 _Input；")])]),s._v(" "),e("h3",{attrs:{id:"stdcall-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#stdcall-2"}},[s._v("#")]),s._v(" __stdcall")]),s._v(" "),e("ul",[e("li",[s._v("规则：一个下划线前缀，函数名，一个@符号，参数的字节数；")]),s._v(" "),e("li",[s._v("格式：_FunctionName@Number；")]),s._v(" "),e("li",[s._v("例如：void Input(int a, int b) 被修饰为 _Input@8；")])]),s._v(" "),e("h3",{attrs:{id:"fastcall-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fastcall-2"}},[s._v("#")]),s._v(" __fastcall")]),s._v(" "),e("ul",[e("li",[s._v("规则：一个@符号前缀，函数名，一个@符号，参数的字节数；")]),s._v(" "),e("li",[s._v("格式：@FunctionName@Number；")]),s._v(" "),e("li",[s._v("例如：void Input(int a, int b) 被修饰为 @Input@8；")])]),s._v(" "),e("h2",{attrs:{id:"调用约定-对函数名称修饰的影响-c-编译器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#调用约定-对函数名称修饰的影响-c-编译器"}},[s._v("#")]),s._v(" 调用约定 - 对函数名称修饰的影响 - C++编译器")]),s._v(" "),e("h3",{attrs:{id:"规则"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#规则"}},[s._v("#")]),s._v(" 规则")]),s._v(" "),e("ol",[e("li",[s._v("一个 ? 符号前缀")]),s._v(" "),e("li",[s._v("函数名；")]),s._v(" "),e("li",[s._v("两个@符号，调用约定标识；")]),s._v(" "),e("li",[s._v("参数表；")]),s._v(" "),e("li",[s._v("结束符；")])]),s._v(" "),e("h3",{attrs:{id:"函数名"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#函数名"}},[s._v("#")]),s._v(" 函数名")]),s._v(" "),e("ul",[e("li",[s._v("非类成员函数：函数名；")]),s._v(" "),e("li",[s._v("类成员函数：函数名，一个@符号，类名；")])]),s._v(" "),e("h3",{attrs:{id:"调用约定标识"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#调用约定标识"}},[s._v("#")]),s._v(" 调用约定标识")]),s._v(" "),e("ul",[e("li",[s._v("__stdcall：YG；")]),s._v(" "),e("li",[s._v("__cdecl：YA；")]),s._v(" "),e("li",[s._v("__fastcall：YI；")]),s._v(" "),e("li",[s._v("__thiscall：QAE(public)，IAE(protected)，AAE(private)；")]),s._v(" "),e("li",[s._v("__thiscall const：QBE(public)，IBE(protected)，ABE(private)；")])]),s._v(" "),e("h3",{attrs:{id:"参数表"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参数表"}},[s._v("#")]),s._v(" 参数表")]),s._v(" "),e("blockquote",[e("p",[s._v("首先说明：参数表中第一个是返回值，第二个开始才是函数参数：")])]),s._v(" "),e("ul",[e("li",[s._v("X：void")]),s._v(" "),e("li",[s._v("D：char")]),s._v(" "),e("li",[s._v("E：unsigned char")]),s._v(" "),e("li",[s._v("F：short")]),s._v(" "),e("li",[s._v("H：int")]),s._v(" "),e("li",[s._v("I：unsigned int")]),s._v(" "),e("li",[s._v("J：long")]),s._v(" "),e("li",[s._v("K：unsigned long")]),s._v(" "),e("li",[s._v("M：float")]),s._v(" "),e("li",[s._v("N：double")]),s._v(" "),e("li",[s._v("_N：bool")]),s._v(" "),e("li",[s._v("U：结构类型，后面跟上结构体名称，用“@@”表示名称结束")]),s._v(" "),e("li",[s._v("PA：指针，后面跟上指针类型，若相同类型指针连续出现，以“0”代替，一个“0”代表一次重复")]),s._v(" "),e("li",[s._v("PB：const 指针，与PA一致")]),s._v(" "),e("li",[s._v("AAV1：该类实例的引用")]),s._v(" "),e("li",[s._v("ABV1：该类实例的 const 引用")])]),s._v(" "),e("h3",{attrs:{id:"结束符"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#结束符"}},[s._v("#")]),s._v(" 结束符")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("@Z")]),s._v(" 标识整个名字的结束")]),s._v(" "),e("li",[s._v("如果该函数无参数，则以 "),e("code",[s._v("XZ")]),s._v(" 标识结束；")])]),s._v(" "),e("h3",{attrs:{id:"举例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#举例"}},[s._v("#")]),s._v(" 举例")]),s._v(" "),e("p",[s._v("例如：")]),s._v(" "),e("div",{staticClass:"language-cpp line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*\n?Test1@@YGHPADK@Z\n*/")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" __stdcall "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("Test1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" var1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" ulP"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[s._v("例如：")]),s._v(" "),e("div",{staticClass:"language-cpp line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*\n?Test2@@YAXXZ\n*/")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" __cdecl "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("Test2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[s._v("例如类方法：")]),s._v(" "),e("div",{staticClass:"language-cpp line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("CTest")]),s._v(" \n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" \n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("Function")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("protected")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" \n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("CopyInfo")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" CTest "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("src"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("DrawText")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("HDC hdc"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" pos"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" TCHAR"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" text"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" RGBQUAD color"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" BYTE bUnder"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("bool")]),s._v(" bSet"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("InsightClass")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("DWORD dwClass"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("ul",[e("li",[s._v("Function：")])]),s._v(" "),e("div",{staticClass:"language-cpp line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v("Function@CTest@@AAEXH@Z\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("ul",[e("li",[s._v("CopyInfo：")])]),s._v(" "),e("div",{staticClass:"language-cpp line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v("CopyInfo@CTest@@IAEXABV1@@Z\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("ul",[e("li",[s._v("DrawText：")])]),s._v(" "),e("div",{staticClass:"language-cpp line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*\nTCHAR其实是char \nBYTE其实是unsigned char \nHDC其实是HDC结构类型的指针 \nRGBQUAD其实是结构体tagRGBQUAD \n*/")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v("DrawText@CTest@@QAEJPAUHDC@@JPBDUtagRGBQUAD@@E_N@Z\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("ul",[e("li",[s._v("InsightClass：")])]),s._v(" "),e("div",{staticClass:"language-cpp line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*\nDWORD其实是unsigned long \n*/")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v("InsightClass@CTest@@QBEJK@Z\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("h2",{attrs:{id:"c-c-混合编程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#c-c-混合编程"}},[s._v("#")]),s._v(" C & C++ 混合编程")]),s._v(" "),e("h3",{attrs:{id:"问题描述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#问题描述"}},[s._v("#")]),s._v(" 问题描述")]),s._v(" "),e("p",[s._v("从前面讲的内容可以看到：")]),s._v(" "),e("ol",[e("li",[s._v("调用约定对函数栈区会产生影响，但是， 这个影响与C/C++编译器是无关的；")]),s._v(" "),e("li",[s._v("调用约定对函数名称修饰会产生影响，而且，C/C++编译器的规则是不一样的；")])]),s._v(" "),e("p",[s._v("而C/C++混合编程的时候，问题是：")]),s._v(" "),e("ul",[e("li",[s._v("假设C程序中提供了一个方法，该方法使用C编译器编译（可能C程序通过.o/.obj文件输出并进行后期link，或者通过LIB/DLL等形式输出）")]),s._v(" "),e("li",[s._v("然后在C++程序中需要使用该方法，且C++程序使用C++编译器编译")]),s._v(" "),e("li",[s._v("那么，在保证了二者的调用约定一致的情况下，仍然会出现C++编译器找不到该方法实现体的问题")])]),s._v(" "),e("p",[s._v("原因很好理解：")]),s._v(" "),e("ul",[e("li",[s._v("因为C/C++编译器使用了不同的函数名称修饰")]),s._v(" "),e("li",[s._v("而要解决这个问题，就是让C++编译器使用C编译器的函数名称修饰方式")]),s._v(" "),e("li",[s._v("也就是 "),e("code",[s._v('extern "C"')])])]),s._v(" "),e("h3",{attrs:{id:"extern-c"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#extern-c"}},[s._v("#")]),s._v(' extern "C"')]),s._v(" "),e("blockquote",[e("p",[e("code",[s._v('extern "C"')]),s._v(" 这句话的作用，就是要求统一使用C编译器的方式，来进行函数名称的修饰。")])]),s._v(" "),e("p",[s._v("例如，在C程序中该方法如下：")]),s._v(" "),e("div",{staticClass:"language-c line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-c"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" __stdcall "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("funC")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("那么，在C++程序中，要使用该C方法之前，先进行声明（至于为何还要再加一个extern，那是C的知识，与本文无关）：")]),s._v(" "),e("div",{staticClass:"language-cpp line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extern")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"C"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extern")]),s._v(" __stdcall "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("funC")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("如果要使用的C方法比较多，则可以如下：")]),s._v(" "),e("div",{staticClass:"language-cpp line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extern")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"C"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extern")]),s._v(" stdcall "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("funC1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extern")]),s._v(" stdcall "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("funC2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extern")]),s._v(" __stdcall "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("funC3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[s._v("然后，在C++程序中，就可以直接使用该C方法了：")]),s._v(" "),e("div",{staticClass:"language-cpp line-numbers-mode"},[e("div",{staticClass:"highlight-lines"},[e("br"),e("br"),e("br"),e("div",{staticClass:"highlighted"},[s._v(" ")]),e("br"),e("br")]),e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("CTest")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("f")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("funC3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("  \n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("h3",{attrs:{id:"cplusplus"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cplusplus"}},[s._v("#")]),s._v(" __cplusplus")]),s._v(" "),e("blockquote",[e("p",[e("code",[s._v("__cplusplus")]),s._v(" 这个宏是 CPP 文件自带的，其作用如下：")])]),s._v(" "),e("ul",[e("li",[s._v("只有 C++ 才提供 "),e("code",[s._v('extern "C"')]),s._v(" 这个符号，C编译器是不认识这个符号的")]),s._v(" "),e("li",[s._v("也就是说，如果是C++编译器，才认识 "),e("code",[s._v('extern "C"')]),s._v(" 这个符号")]),s._v(" "),e("li",[s._v("因为，C程序可能将方法统一声明在一个 .H 中，并提供给不同的使用者使用，而使用者可能是C程序，也可能是C++程序")]),s._v(" "),e("li",[s._v("因此，就需要做一个判断，如果是C++程序，那就加上 "),e("code",[s._v('extern "C"')]),s._v(" ，如果不是C++程序，那就不用加上 "),e("code",[s._v('extern "C"')]),s._v(" 了，否则C编译器不认识该符号")])]),s._v(" "),e("blockquote",[e("p",[s._v("因此，我们就可以将对外提供的方法统一定义在一个.H文件中，如下：")])]),s._v(" "),e("div",{staticClass:"language-c line-numbers-mode"},[e("div",{staticClass:"highlight-lines"},[e("div",{staticClass:"highlighted"},[s._v(" ")]),e("div",{staticClass:"highlighted"},[s._v(" ")]),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("div",{staticClass:"highlighted"},[s._v(" ")]),e("br"),e("br"),e("br")]),e("pre",{pre:!0,attrs:{class:"language-c"}},[e("code",[e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("ifdef")]),s._v(" __cplusplus")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extern")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"C"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("endif")])]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extern")]),s._v(" __stdcall "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("funC1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extern")]),s._v(" __stdcall "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("funC2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extern")]),s._v(" __stdcall "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("funC3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("ifdef")]),s._v(" __cplusplus")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("endif")])]),s._v("\n")])]),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("h2",{attrs:{id:"函数的导出-概述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#函数的导出-概述"}},[s._v("#")]),s._v(" 函数的导出 - 概述")]),s._v(" "),e("p",[s._v("函数导出的目的，是为了提供给使用者使用，因此需注意几点：")]),s._v(" "),e("ol",[e("li",[s._v("调用约定会对 "),e("em",[e("strong",[s._v("函数栈区")])]),s._v(" 产生影响，只有调用者和被调用者都使用同样的约定，才能保证程序正常的运行")]),s._v(" "),e("li",[s._v("调用约定会对 "),e("em",[e("strong",[s._v("函数名称")])]),s._v(" 产生影响，且不同的编译器对函数名称的修饰是不同的")])]),s._v(" "),e("p",[s._v("因此，对于 "),e("em",[e("strong",[s._v("调用者和被调用者")])]),s._v(" ，要注意：")]),s._v(" "),e("ol",[e("li",[s._v("都需要使用相同的 "),e("em",[e("strong",[s._v("调用约定")])])]),s._v(" "),e("li",[s._v("确保使用相同编译器的 "),e("em",[e("strong",[s._v("函数名修饰方式")])])])]),s._v(" "),e("blockquote",[e("p",[s._v("因此，在上述关于C/C++混合编程一节中已经讲得很清晰了：从通用和严谨的角度来说，若涉及到函数的导出与共享，则 "),e("code",[s._v('extern "C"')]),s._v(" 和 "),e("code",[s._v("__cplusplus")]),s._v(" 都是必须使用的")])]),s._v(" "),e("p",[s._v("函数导出的本质可以理解为一种 "),e("em",[e("strong",[s._v("分工")])]),s._v(" ，也就是说：")]),s._v(" "),e("ul",[e("li",[s._v("调用者需要使用某个函数")]),s._v(" "),e("li",[s._v("而这个函数的实现由提供者来完成")]),s._v(" "),e("li",[s._v("因此，函数导出也可以理解为函数体（函数实现）的一种共享")])]),s._v(" "),e("p",[s._v("因此，根据这个理解，可以将函数导出分为几类：")]),s._v(" "),e("ol",[e("li",[e("em",[e("strong",[s._v("编译时")])]),s._v(" ，也就是编译期间就得到了函数体，并包含在使用者程序内，函数体属于使用者程序的一部分；例如 "),e("code",[s._v(".lib")]),s._v(" , "),e("code",[s._v(".obj")]),s._v(" 等；")]),s._v(" "),e("li",[e("em",[e("strong",[s._v("运行时")])]),s._v(" ，也就是运行期间才获取或加载函数体，函数体与使用者是独立的两个模块；例如 "),e("code",[s._v(".dll")]),s._v(" , "),e("code",[s._v(".exe")]),s._v(" 等；因此，调用者在使用这些导出函数时，又分为 "),e("em",[e("strong",[s._v("静态加载")])]),s._v(" 和 "),e("em",[e("strong",[s._v("动态加载")])]),s._v(" ；")])]),s._v(" "),e("h2",{attrs:{id:"函数的导出-编译时"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#函数的导出-编译时"}},[s._v("#")]),s._v(" 函数的导出 - 编译时")]),s._v(" "),e("h3",{attrs:{id:"要素"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#要素"}},[s._v("#")]),s._v(" 要素")]),s._v(" "),e("p",[s._v("编译时的函数导出与使用比较简单：")]),s._v(" "),e("ol",[e("li",[s._v("提供者，"),e("code",[s._v(".h")]),s._v(" ，用来声明函数；")]),s._v(" "),e("li",[s._v("提供者，"),e("code",[s._v(".c/.cpp")]),s._v(" ，用来实现函数；")]),s._v(" "),e("li",[s._v("提供者，编译为"),e("code",[s._v(".lib/.obj")]),s._v(" 等；")]),s._v(" "),e("li",[s._v("使用者，引入 "),e("code",[s._v(".h")]),s._v(" 及 "),e("code",[s._v(".lib")]),s._v(" ，即可直接使用函数；")])]),s._v(" "),e("p",[s._v("例如，头文件 "),e("code",[s._v("a.h")]),s._v(" 声明如下：")]),s._v(" "),e("div",{staticClass:"language-cpp line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("ifdef")]),s._v(" __cplusplus")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extern")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"C"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("endif")])]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" __stdcall "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("func")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("ifdef")]),s._v(" __cplusplus")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("endif")])]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[s._v("对应的，函数体 "),e("code",[s._v("a.cpp")]),s._v(" 实现如下：")]),s._v(" "),e("div",{staticClass:"language-cpp line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" __stdcall "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("func")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//...")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[s._v("编译之后：")]),s._v(" "),e("ul",[e("li",[s._v("可能编译为 "),e("code",[s._v(".lib")]),s._v(" ，或者 "),e("code",[s._v(".obj")]),s._v(" 等")]),s._v(" "),e("li",[s._v("因此，将头文件，编译后的函数体，交给调用者即可；")])]),s._v(" "),e("p",[s._v("而调用者则可直接使用如下：")]),s._v(" "),e("div",{staticClass:"language-cpp line-numbers-mode"},[e("div",{staticClass:"highlight-lines"},[e("div",{staticClass:"highlighted"},[s._v(" ")]),e("div",{staticClass:"highlighted"},[s._v(" ")]),e("br"),e("br"),e("div",{staticClass:"highlighted"},[s._v(" ")]),e("br"),e("br")]),e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a.h"')])]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("pragma")]),s._v(' comment (lib, "a.lib")')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("test")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("func")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("h3",{attrs:{id:"原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#原理"}},[s._v("#")]),s._v(" 原理")]),s._v(" "),e("p",[s._v("在该过程中，提供者、调用者、编译器的工作，可用下图来表示：")]),s._v(" "),e("p",[e("img",{attrs:{src:a(458),alt:"pic"}})]),s._v(" "),e("p",[s._v("根据上图进行总结，要点如下：")]),s._v(" "),e("ol",[e("li",[s._v("对于提供者和调用者来说，头文件都遵循了统一的 "),e("em",[e("strong",[s._v("调用约定")])]),s._v(" 和 "),e("em",[e("strong",[s._v("编译器函数名修饰")])]),s._v(" 规则；")]),s._v(" "),e("li",[s._v("对于提供者和调用者来说，只需要关心头文件中的函数名称即可；")]),s._v(" "),e("li",[s._v("对于编译器来说，都根据头文件中的调用约定和函数名称，进行了函数名的修饰，但是这个修饰对于提供者和调用者来说是透明的；")])]),s._v(" "),e("p",[s._v("结合上图，看函数名称的变化：")]),s._v(" "),e("ol",[e("li",[s._v("头文件中声明函数名是 "),e("code",[s._v("func")]),s._v(" ；")]),s._v(" "),e("li",[s._v("函数实现时实现为 "),e("code",[s._v("func")]),s._v(" ；")]),s._v(" "),e("li",[s._v("函数体 "),e("code",[s._v("func")]),s._v(" 被编译为 "),e("code",[s._v("_func@4")]),s._v(" ；")]),s._v(" "),e("li",[s._v("调用者代码中根据头文件的名称直接调用 "),e("code",[s._v("func")]),s._v(" ；")]),s._v(" "),e("li",[s._v("调用者代码中的 "),e("code",[s._v("func")]),s._v(" 被编译为 "),e("code",[s._v("_func@4")]),s._v(" ；")]),s._v(" "),e("li",[s._v("因此，提供者和调用者在程序中都统一使用 "),e("code",[s._v("func")]),s._v(" ；")]),s._v(" "),e("li",[s._v("但是，提供者和调用者在编译后都统一使用了 "),e("code",[s._v("_func@4")]),s._v(" ，编译器能够正常完成链接和编译；")])]),s._v(" "),e("h2",{attrs:{id:"函数的导出-运行时"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#函数的导出-运行时"}},[s._v("#")]),s._v(" 函数的导出 - 运行时")]),s._v(" "),e("h3",{attrs:{id:"原理-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#原理-2"}},[s._v("#")]),s._v(" 原理")]),s._v(" "),e("p",[s._v("运行时的函数导出与使用包括如下要素：")]),s._v(" "),e("ol",[e("li",[s._v("提供者，"),e("code",[s._v(".h")]),s._v(" ，用来声明导出函数；")]),s._v(" "),e("li",[s._v("提供者，"),e("code",[s._v(".c/.cpp")]),s._v(" ，用来实现函数；")]),s._v(" "),e("li",[s._v("提供者，编译为 "),e("code",[s._v(".dll")]),s._v(" 及对应的 "),e("code",[s._v(".lib")]),s._v(" ；")]),s._v(" "),e("li",[s._v("使用者，引入 "),e("code",[s._v(".h")]),s._v(" 及 "),e("code",[s._v(".lib")]),s._v(" ，即可直接使用函数，即 "),e("em",[e("strong",[s._v("静态加载")])]),s._v(" ；也可只使用 "),e("code",[s._v(".dll")]),s._v(" 或 "),e("code",[s._v(".exe")]),s._v(" ，即 "),e("em",[e("strong",[s._v("动态加载")])]),s._v(" ；")])]),s._v(" "),e("p",[s._v("过程可用下图来表示：")]),s._v(" "),e("p",[e("img",{attrs:{src:a(459),alt:"pic"}})]),s._v(" "),e("p",[s._v("从上图可以看到：")]),s._v(" "),e("ol",[e("li",[s._v("导出涉及到一些语法，且上图只是其中一种语法，后续会讲解各种导出方式；")]),s._v(" "),e("li",[s._v("导出后可以得到 "),e("code",[s._v(".lib")]),s._v(" ，"),e("code",[s._v(".dll")]),s._v(" ；")]),s._v(" "),e("li",[s._v("对于 "),e("code",[s._v(".lib")]),s._v(" 来说，函数名称修饰遵循前面所总结的规则，即 "),e("em",[e("strong",[s._v("调用约定")])]),s._v(" 和 "),e("em",[e("strong",[s._v("编译器函数名修饰")])]),s._v(" ；")]),s._v(" "),e("li",[s._v("对于 "),e("code",[s._v(".dll")]),s._v(" 来说，函数名称可以有多种形态，后续会分别讲解；")])]),s._v(" "),e("p",[s._v("需要注意的是，「运行时」函数导出与前面所讲的「编译时」函数导出虽然都有 "),e("code",[s._v(".lib")]),s._v(" ，但其实区别很大的：")]),s._v(" "),e("ul",[e("li",[s._v("「编译时」的函数导出，"),e("code",[s._v(".lib")]),s._v(" 中包含了函数体；")]),s._v(" "),e("li",[s._v("「运行时」的函数导出，"),e("code",[s._v(".lib")]),s._v(" 中只是包含了函数在 "),e("code",[s._v(".dll/.exe")]),s._v(" 中的名称和地址等信息，函数体在 "),e("code",[s._v(".dll/.exe")]),s._v(" 中；")])]),s._v(" "),e("h3",{attrs:{id:"导出-declspec-dllexport"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#导出-declspec-dllexport"}},[s._v("#")]),s._v(" 导出 - __declspec(dllexport)")]),s._v(" "),e("blockquote",[e("p",[s._v("这是一种在DLL中导出函数的方式，使用 "),e("code",[s._v("__declspec(dllexport)")]),s._v(" 语法。")])]),s._v(" "),e("ul",[e("li",[s._v("注意，目的只是为了DLL函数的导出，而其中涉及到 "),e("code",[s._v(".dll")]),s._v(" 和 "),e("code",[s._v(".lib")])]),s._v(" "),e("li",[s._v("对于 "),e("code",[s._v(".lib")]),s._v(" 来说，函数名称遵循 "),e("em",[e("strong",[s._v("调用约定")])]),s._v(" 和 "),e("em",[e("strong",[s._v("编译器函数名修饰")])])]),s._v(" "),e("li",[s._v("但对于 "),e("code",[s._v(".dll")]),s._v(" 来说，函数名称有几种情况：\n"),e("ul",[e("li",[s._v("第一种情况：\n"),e("ul",[e("li",[s._v("使用C/C++默认的调用约定，即 "),e("code",[s._v("__cdecl")]),s._v(" ，由于是默认的，可以不用显式声明；")]),s._v(" "),e("li",[s._v("使用C编译器的名称修饰方式，即 "),e("code",[s._v('extern "C"')]),s._v(" ；")]),s._v(" "),e("li",[s._v("在这种情况下，"),e("code",[s._v(".dll")]),s._v(" 中的函数名称就不会进行额外修饰；")])])]),s._v(" "),e("li",[s._v("第二种情况：\n"),e("ul",[e("li",[s._v("即不满足第一种情况的任何一种形式；")]),s._v(" "),e("li",[s._v("此时 .dll 中的函数名称修饰由调用约定和编译器决定；")])])])])])]),s._v(" "),e("p",[s._v("举例："),e("code",[s._v(".dll")]),s._v(" 中的函数名称是 "),e("code",[s._v("func")]),s._v("；")]),s._v(" "),e("div",{staticClass:"language-cpp line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("ifdef")]),s._v(" __cplusplus")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extern")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"C"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("endif")])]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("__declspec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("dllexport"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("func")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("ifdef")]),s._v(" __cplusplus")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("endif")])]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[s._v("举例："),e("code",[s._v(".dll")]),s._v(" 中的函数名称是 "),e("code",[s._v("func")]),s._v(" ；")]),s._v(" "),e("div",{staticClass:"language-cpp line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("ifdef")]),s._v(" __cplusplus")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extern")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"C"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("endif")])]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("__declspec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("dllexport"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" __cdecl "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("func")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("ifdef")]),s._v(" __cplusplus")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("endif")])]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[s._v("举例："),e("code",[s._v(".dll")]),s._v(" 中的函数名称是 "),e("code",[s._v("_func@4")]),s._v(" ；")]),s._v(" "),e("div",{staticClass:"language-cpp line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("ifdef")]),s._v(" __cplusplus")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extern")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"C"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("endif")])]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("__declspec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("dllexport"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" __stdcall "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("func")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("ifdef")]),s._v(" __cplusplus")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("endif")])]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[s._v("举例：在C++编译器中，"),e("code",[s._v(".dll")]),s._v(" 中的函数名称是 "),e("code",[s._v("?Test1@@YGHPADK@Z")]),s._v(" ；")]),s._v(" "),e("div",{staticClass:"language-cpp line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("__declspec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("dllexport"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" __stdcall "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("Test1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" var1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" ulP"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h3",{attrs:{id:"导出-def模块文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#导出-def模块文件"}},[s._v("#")]),s._v(" 导出 - .def模块文件")]),s._v(" "),e("blockquote",[e("p",[s._v("这是另一种导出DLL函数的方式，使用 "),e("code",[s._v(".def")]),s._v(" 模块文件；一样的，目的只是为了DLL函数的导出，而其中涉及到 "),e("code",[s._v(".dll")]),s._v(" 和 "),e("code",[s._v(".lib")]),s._v(" 。")])]),s._v(" "),e("ol",[e("li",[s._v("对于 "),e("code",[s._v(".lib")]),s._v(" 来说，函数名称遵循 "),e("em",[e("strong",[s._v("调用约定")])]),s._v(" 和 "),e("em",[e("strong",[s._v("编译器函数名修饰")])]),s._v(" ；")]),s._v(" "),e("li",[s._v("对于 "),e("code",[s._v(".dll")]),s._v(" 来说，使用 "),e("code",[s._v(".def")]),s._v(" 导出的DLL函数名称不会进行额外修饰；")])]),s._v(" "),e("p",[s._v("因此，头文件 "),e("code",[s._v("a.h")]),s._v(" 声明如下：")]),s._v(" "),e("div",{staticClass:"language-cpp line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("ifdef")]),s._v(" __cplusplus")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extern")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"C"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("endif")])]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" __stdcall "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("func1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" __stdcall "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("func2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" c"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("ifdef")]),s._v(" __cplusplus")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("endif")])]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[s._v("对应的，"),e("code",[s._v(".def")]),s._v(" 文件如下定义：")]),s._v(" "),e("div",{staticClass:"language-cpp line-numbers-mode"},[e("div",{staticClass:"highlight-lines"},[e("br"),e("br"),e("div",{staticClass:"highlighted"},[s._v(" ")]),e("div",{staticClass:"highlighted"},[s._v(" ")]),e("br")]),e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[s._v("LIBRARY "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"DllName"')]),s._v("\nEXPORTS\nfunc1 @"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" NONAME \nfuncX "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" func2 @"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" NONAME\n")])]),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("code",[s._v(".def")]),s._v(" 文件说明如下：")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("LIBRARY")]),s._v(" ，声明DLL库的名称；")]),s._v(" "),e("li",[e("code",[s._v("EXPORTS")]),s._v(" ，开始声明要导出的函数；")])]),s._v(" "),e("p",[s._v("要导出的函数格式："),e("code",[s._v("函数别名 = 函数名 @ 序号 [NONAME]")])]),s._v(" "),e("ul",[e("li",[e("code",[s._v("函数别名")]),s._v(" ，就是给所导出的函数进行重命名，若不重命名，则导出为函数名；")]),s._v(" "),e("li",[e("code",[s._v("函数名")]),s._v(" ，就是所要导出的函数名；")]),s._v(" "),e("li",[e("code",[s._v("序号")]),s._v(" ，使用者可根据序号来获取函数；")]),s._v(" "),e("li",[e("code",[s._v("NONAME")]),s._v(" ，可选，DLL中不包含函数名，只包含序号，减小DLL的体积；")])]),s._v(" "),e("h3",{attrs:{id:"导入-静态加载"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#导入-静态加载"}},[s._v("#")]),s._v(" 导入 - 静态加载")]),s._v(" "),e("p",[s._v("静态加载时：")]),s._v(" "),e("ul",[e("li",[s._v("直接使用 "),e("code",[s._v(".lib")]),s._v(" 和 "),e("code",[s._v(".h")]),s._v(" 即可")]),s._v(" "),e("li",[s._v("但仍然要注意的是，既然使用到 "),e("code",[s._v(".h")]),s._v(" ，那么就必须保持一致的 "),e("em",[e("strong",[s._v("调用约定")])]),s._v(" 和 "),e("em",[e("strong",[s._v("编译器函数名修饰")])]),s._v(" 。")])]),s._v(" "),e("p",[s._v("例如，头文件 "),e("code",[s._v("a.h")]),s._v(" 声明如下：")]),s._v(" "),e("div",{staticClass:"language-cpp line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("ifdef")]),s._v(" __cplusplus")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extern")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"C"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("endif")])]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" __stdcall "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("func")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("ifdef")]),s._v(" __cplusplus")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("endif")])]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[s._v("而调用者则可直接使用如下：")]),s._v(" "),e("div",{staticClass:"language-cpp line-numbers-mode"},[e("div",{staticClass:"highlight-lines"},[e("br"),e("div",{staticClass:"highlighted"},[s._v(" ")]),e("br"),e("br"),e("div",{staticClass:"highlighted"},[s._v(" ")]),e("br"),e("br")]),e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a.h"')])]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("pragma")]),s._v(' comment (lib,"a.lib")')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("test")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("func")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[s._v("静态加载的原理可通过下图来看：")]),s._v(" "),e("p",[e("img",{attrs:{src:a(460),alt:"pic"}})]),s._v(" "),e("p",[s._v("从图中可以看到：")]),s._v(" "),e("ol",[e("li",[s._v("静态加载时，使用者只需要关注与提供者保持一致的 "),e("em",[e("strong",[s._v("调用约定")])]),s._v(" 和 "),e("em",[e("strong",[s._v("编译器函数名修饰")])]),s._v(" ，这通过 "),e("code",[s._v(".h")]),s._v(" 文件即可完成约定；")]),s._v(" "),e("li",[s._v("使用者不用关注在 "),e("code",[s._v(".dll")]),s._v(" 中的真正函数名称是什么，因为 "),e("code",[s._v(".lib")]),s._v(" 知道 "),e("code",[s._v(".dll")]),s._v(" 中的真正函数名和地址；")])]),s._v(" "),e("h3",{attrs:{id:"导入-静态加载-declspec-dllimport"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#导入-静态加载-declspec-dllimport"}},[s._v("#")]),s._v(" 导入 - 静态加载 - __declspec(dllimport)")]),s._v(" "),e("blockquote",[e("p",[s._v("这是一种静态加载DLL中函数的方式，使用语法 "),e("code",[s._v("__declspec(dllimport)")]),s._v(" 。注意，目的只是为了DLL函数的导入，且不用该修饰也能正常导入，但是存在一些细微的区别：")])]),s._v(" "),e("ol",[e("li",[s._v("不使用该修饰时，编译器不知道该函数是从DLL中导入的，因此会产生一次 "),e("em",[e("strong",[s._v("JMP")])]),s._v(" 行为；")]),s._v(" "),e("li",[s._v("使用该修饰时，编译器知道该函数是从DLL中导入的，因此可以直接 "),e("em",[e("strong",[s._v("CALL")])]),s._v(" 对应的函数地址；")]),s._v(" "),e("li",[s._v("这涉及到编译原理和运行EXE时的PE文件格式，我也不全懂；")])]),s._v(" "),e("p",[s._v("因此，针对DLL提供者的 "),e("code",[s._v(".h")]),s._v(" 文件，我们就可以如下声明，也是我们平时最常看到的形式：")]),s._v(" "),e("div",{staticClass:"language-cpp line-numbers-mode"},[e("div",{staticClass:"highlight-lines"},[e("br"),e("div",{staticClass:"highlighted"},[s._v(" ")]),e("br"),e("div",{staticClass:"highlighted"},[s._v(" ")]),e("br"),e("br"),e("br"),e("br")]),e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("ifdef")]),s._v(" XXXX")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" MYEXPORT __declspec(dllexport)")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("else")])]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" MYEXPORT __declspec(dllimport)")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("endif")])]),s._v("\n\nMYEXPORT "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("func")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[s._v("其中：")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("XXXX")]),s._v(" 是一个宏；")]),s._v(" "),e("li",[s._v("对于 "),e("em",[e("strong",[s._v("提供者")])]),s._v(" 来说，代码环境中会定义该宏，从而就是 "),e("em",[e("strong",[s._v("导出")])]),s._v(" 函数；")]),s._v(" "),e("li",[s._v("对于 "),e("em",[e("strong",[s._v("使用者")])]),s._v(" 来说，代码环境中未定义该宏，从而就是 "),e("em",[e("strong",[s._v("导入")])]),s._v(" 函数；")])]),s._v(" "),e("h3",{attrs:{id:"导入-动态加载"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#导入-动态加载"}},[s._v("#")]),s._v(" 导入 - 动态加载")]),s._v(" "),e("p",[s._v("动态加载时：")]),s._v(" "),e("ul",[e("li",[s._v("就不需要使用 "),e("code",[s._v(".lib")]),s._v(" 和 "),e("code",[s._v(".h")])]),s._v(" "),e("li",[s._v("因此此时只关注DLL中的函数")]),s._v(" "),e("li",[s._v("所以，此时要关注的是与 "),e("em",[e("strong",[s._v("提供者")])]),s._v(" 保持一致的 "),e("em",[e("strong",[s._v("调用约定")])]),s._v("，而 "),e("em",[e("strong",[s._v("函数名称")])]),s._v(" 则使用DLL中的函数名")])]),s._v(" "),e("p",[s._v("动态加载的原理通过下图来看：")]),s._v(" "),e("p",[e("img",{attrs:{src:a(461),alt:"pic"}})]),s._v(" "),e("p",[s._v("对于使用者来说：")]),s._v(" "),e("ol",[e("li",[e("em",[e("strong",[s._v("调用约定")])]),s._v(" 必须与DLL中的函数保持一致；")]),s._v(" "),e("li",[e("em",[e("strong",[s._v("函数名称")])]),s._v(" 必须使用DLL中的实际函数名称；")])]),s._v(" "),e("h3",{attrs:{id:"导入-动态加载-获取函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#导入-动态加载-获取函数"}},[s._v("#")]),s._v(" 导入 - 动态加载 - 获取函数")]),s._v(" "),e("p",[s._v("动态加载时，获取函数有多种方式：")]),s._v(" "),e("blockquote",[e("p",[s._v("根据名称获取")])]),s._v(" "),e("div",{staticClass:"language-cpp line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("GetProcAddress")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("h"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"funcXXX"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("说明：")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("funcXXX")]),s._v(" 就是DLL中实际的函数名称；")]),s._v(" "),e("li",[s._v("前提是，DLL导出函数时包含了函数名；")])]),s._v(" "),e("blockquote",[e("p",[s._v("根据序号获取")])]),s._v(" "),e("div",{staticClass:"language-cpp line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("GetProcAddress")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("h"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("MAKEINTRESOURCE")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("说明：")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("MAKEINTRESOURCE")]),s._v(" 就是根据序号来得到函数；")]),s._v(" "),e("li",[s._v("序号必须与DLL导出函数时的序号对应；")]),s._v(" "),e("li",[s._v("前提是，DLL导出函数时指定了序号；")]),s._v(" "),e("li",[s._v("如果DLL导出函数使用了 "),e("code",[s._v("NONAME")]),s._v(" ，则只能根据序号来获取；")])]),s._v(" "),e("h2",{attrs:{id:"总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[s._v("#")]),s._v(" 总结")]),s._v(" "),e("blockquote",[e("p",[s._v("函数的导出目的就是为了 "),e("em",[e("strong",[s._v("共享")])]),s._v(" ，因此，涉及到一致的 "),e("em",[e("strong",[s._v("函数调用约定")])]),s._v(" 和 "),e("em",[e("strong",[s._v("编译器函数名称修饰")])]),s._v(" 。")])]),s._v(" "),e("p",[s._v("而要共享函数，会涉及到 "),e("code",[s._v(".h")]),s._v(" 文件的定义，所以：")]),s._v(" "),e("ul",[e("li",[s._v("调用约定 "),e("em",[e("strong",[s._v("默认")])]),s._v(" 是 "),e("code",[s._v("__cdecl")]),s._v(" ，使用其它调用约定则显式的写明，例如 "),e("code",[s._v("__stdcall")]),s._v(" ；")]),s._v(" "),e("li",[s._v("函数名称修饰最好都指定C方式，即 "),e("code",[s._v('extern "C"')]),s._v(" ；")]),s._v(" "),e("li",[s._v("为了适应C/C++编译器，再增加 "),e("code",[s._v("__cplusplus")]),s._v(" 判断；")]),s._v(" "),e("li",[s._v("针对「运行时」的函数导出，可使用 "),e("code",[s._v("__declspec(export)")]),s._v(" 或者 "),e("code",[s._v(".def")]),s._v(" ；")]),s._v(" "),e("li",[s._v("针对「运行时」的函数导入，若提供者使用了 "),e("code",[s._v("__declspec(export)")]),s._v(" ，则导入时最好使用 "),e("code",[s._v("__declspec(import)")]),s._v(" ；")])]),s._v(" "),e("p",[s._v("因此，综合上述要点，针对DLL，一个最全最标准的函数声明 "),e("code",[s._v(".h")]),s._v(" 就可以是如下格式：")]),s._v(" "),e("div",{staticClass:"language-cpp line-numbers-mode"},[e("div",{staticClass:"highlight-lines"},[e("br"),e("div",{staticClass:"highlighted"},[s._v(" ")]),e("br"),e("div",{staticClass:"highlighted"},[s._v(" ")]),e("br"),e("br"),e("div",{staticClass:"highlighted"},[s._v(" ")]),e("div",{staticClass:"highlighted"},[s._v(" ")]),e("br"),e("br"),e("div",{staticClass:"highlighted"},[s._v(" ")]),e("div",{staticClass:"highlighted"},[s._v(" ")]),e("br"),e("div",{staticClass:"highlighted"},[s._v(" ")]),e("br"),e("br"),e("br")]),e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("ifdef")]),s._v(" XXXX")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" MYEXPORT __declspec(dllexport)")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("else")])]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" MYEXPORT __declspec(dllimport)")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("endif")])]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("ifdef")]),s._v(" __cplusplus")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extern")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"C"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("endif")])]),s._v("\n\nMYEXPORT "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("func1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nMYEXPORT "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("func2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("ifdef")]),s._v(" __cplusplus")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("endif")])]),s._v("\n")])]),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br")])]),e("h2",{attrs:{id:"附记"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#附记"}},[s._v("#")]),s._v(" 附记")]),s._v(" "),e("h3",{attrs:{id:"查看导出函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看导出函数"}},[s._v("#")]),s._v(" 查看导出函数")]),s._v(" "),e("blockquote",[e("p",[s._v("使用VS的命令行工具，并使用 "),e("code",[s._v("dumpbin")]),s._v(" 命令。")])]),s._v(" "),e("p",[s._v("查看DLL中的导出函数：")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("dumpbin /exports xxx.dll\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("查看LIB中的导出函数：")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("dumpbin /linkermember xxx.lib\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("通过上述方式可以做到：")]),s._v(" "),e("ul",[e("li",[s._v("剖析一个DLL项目所生成的 "),e("code",[s._v(".lib")]),s._v(" 和 "),e("code",[s._v(".dll")])]),s._v(" "),e("li",[s._v("并通过对比 "),e("code",[s._v(".h")]),s._v(" ，来查看各自的函数名称的不同")])]),s._v(" "),e("h3",{attrs:{id:"从-dll-提取-lib"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#从-dll-提取-lib"}},[s._v("#")]),s._v(" 从 DLL 提取 LIB")]),s._v(" "),e("blockquote",[e("p",[s._v("有时候我们只有 "),e("code",[s._v(".dll")]),s._v(" ，只能动态加载，但此时若想静态加载，则需要 "),e("code",[s._v(".lib")]),s._v(" 文件；可使用VS的命令行工具，按照如下步骤进行：")])]),s._v(" "),e("ol",[e("li",[s._v("首先，需要先根据 "),e("code",[s._v(".dll")]),s._v(" 来得到 "),e("code",[s._v(".def")]),s._v(" ：")])]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("dumpbin /exports xxx.dll "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" xxx.def\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("ol",{attrs:{start:"2"}},[e("li",[s._v("其次，根据 "),e("code",[s._v(".def")]),s._v(" 文件来得到 "),e("code",[s._v(".lib")]),s._v(" ，但注意：\n"),e("ul",[e("li",[s._v("要确保 "),e("code",[s._v(".def")]),s._v(" 已经被修改为标准的 "),e("code",[s._v(".def")]),s._v(" 文件格式")]),s._v(" "),e("li",[s._v("其中，"),e("code",[s._v("x86")]),s._v(" 或者 "),e("code",[s._v("x64")]),s._v(" 表示所生成的 "),e("code",[s._v(".lib")]),s._v(" 对应的目标机器类型")])])])]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("lib /def:xxx.def /machine:x86 out/:xxx.lib\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("需要注意的是：")]),s._v(" "),e("ol",[e("li",[s._v("这样的提取方式采用的是 C/C++默认的 "),e("code",[s._v("__cdecl")]),s._v(" "),e("em",[e("strong",[s._v("调用约定")])]),s._v(" 和 "),e("em",[e("strong",[s._v("C编译器函数名修饰")])]),s._v(" ；")]),s._v(" "),e("li",[s._v("因此，要注意是否与DLL提供者的 "),e("em",[e("strong",[s._v("调用约定")])]),s._v(" 一致；")]),s._v(" "),e("li",[s._v("另外，头文件 "),e("code",[s._v(".h")]),s._v(" 总是需要的，可自己编写，但要确保 "),e("em",[e("strong",[s._v("调用约定")])]),s._v(" 和 "),e("em",[e("strong",[s._v("编译器函数名修饰")])]),s._v(" 与DLL提供者一致；")])]),s._v(" "),e("h3",{attrs:{id:"dll-forward-技术"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dll-forward-技术"}},[s._v("#")]),s._v(" DLL FORWARD 技术")]),s._v(" "),e("p",[e("em",[s._v("考虑一种需求场景：")])]),s._v(" "),e("blockquote",[e("ul",[e("li",[s._v("厂商 A 提供了 "),e("code",[s._v("A.dll")])]),s._v(" "),e("li",[s._v("服务商 S 需要进行一些包装，并且增加一些函数后作为 "),e("code",[s._v("S.dll")]),s._v(" 再提供给用户")]),s._v(" "),e("li",[s._v("而且，服务商 S 希望对于用户来说，只需要统一的访问 "),e("code",[s._v("S.dll")]),s._v(" 即可，而不用同时面对 "),e("code",[s._v("A.dll")]),s._v(" 和 "),e("code",[s._v("S.dll")])]),s._v(" "),e("li",[s._v("但是，服务商没有厂商 "),e("code",[s._v("A.dll")]),s._v(" 的源代码，就算有，可能也存在编译、依赖等不可知的问题")])])]),s._v(" "),e("p",[s._v("那么，"),e("em",[e("strong",[s._v("dll forword")])]),s._v(" 技术就是用来解决这个问题的：")]),s._v(" "),e("ul",[e("li",[s._v("假设 "),e("code",[s._v("A.dll")]),s._v(" 中有函数 "),e("code",[s._v("fa1")]),s._v(" 和 "),e("code",[s._v("fa2")]),s._v(" ，那么，在 "),e("code",[s._v("S.dll")]),s._v(" 中只需如下进行 "),e("em",[e("strong",[s._v("forward")])]),s._v(" ：")])]),s._v(" "),e("div",{staticClass:"language-cpp line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("pragma")]),s._v(' comment(linker, "/export:fa1=A.fa1")')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("pragma")]),s._v(' comment(linker, "/export:fa2=A.fa2")')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("ul",[e("li",[s._v("这样，"),e("code",[s._v("S.dll")]),s._v(" 中就包含了 "),e("code",[s._v("A.dll")]),s._v(" 中的方法，剩余的工作就是在 "),e("code",[s._v("S.dll")]),s._v(" 中开发新增接口即可：")])]),s._v(" "),e("div",{staticClass:"language-cpp line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extern")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"C"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("__declspec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("dllexport"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("fs3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//...")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("ul",[e("li",[s._v("因此，对于用户来说，统一通过 "),e("code",[s._v("S.dll")]),s._v("，即可以访问到 "),e("code",[s._v("fa1")]),s._v("，"),e("code",[s._v("fa2")]),s._v("，"),e("code",[s._v("fs3")]),s._v(" 。")])])])}),[],!1,null,null,null);t.default=n.exports}}]);