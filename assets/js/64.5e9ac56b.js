(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{516:function(s,t,a){"use strict";a.r(t);var n=a(27),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"_12-4-tdd-开发模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12-4-tdd-开发模式"}},[s._v("#")]),s._v(" 12.4. tdd 开发模式")]),s._v(" "),a("h5",{attrs:{id:"前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[s._v("#")]),s._v(" 前言")]),s._v(" "),a("ul",[a("li",[s._v("前面的章节里，我们实现了将代码分离为 "),a("code",[s._v("lib.rs")]),s._v(" 和 "),a("code",[s._v("main.rs")])]),s._v(" "),a("li",[a("code",[s._v("lib.rs")]),s._v(" 中包含了代码逻辑")]),s._v(" "),a("li",[a("code",[s._v("main.rs")]),s._v(" 包含了参数收集、错误处理等")]),s._v(" "),a("li",[s._v("因此我们可以为 "),a("code",[s._v("lib.rs")]),s._v(" 编写测试函数来验证功能，而不需要在命令行直接运行来测试")]),s._v(" "),a("li",[s._v("例如，可以直接测试 "),a("code",[s._v("Config::new")]),s._v(" 以及 "),a("code",[s._v("run")]),s._v(" 的逻辑")])]),s._v(" "),a("h5",{attrs:{id:"后语"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#后语"}},[s._v("#")]),s._v(" 后语")]),s._v(" "),a("ul",[a("li",[s._v("在本章，我们需要实现搜索的逻辑代码")]),s._v(" "),a("li",[s._v("但我们会使用 "),a("em",[a("strong",[s._v("TDD")])]),s._v(" 即 test driven development 的方式来完成开发")]),s._v(" "),a("li",[a("em",[a("strong",[s._v("TDD")])]),s._v(" 的好处是，可以驱动代码的设计，而且比起先开发后测试来说，"),a("em",[a("strong",[s._v("TDD")])]),s._v(" 可以确保测试的高覆盖")])]),s._v(" "),a("h5",{attrs:{id:"tdd-流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tdd-流程"}},[s._v("#")]),s._v(" TDD 流程")]),s._v(" "),a("ol",[a("li",[s._v("编写失败的测试函数，并确保属于预期的失败")]),s._v(" "),a("li",[s._v("改进测试代码，让测试能够成功")]),s._v(" "),a("li",[s._v("对成功的测试代码进行重构，并重新测试确保通过")]),s._v(" "),a("li",[s._v("重复上述步骤")])]),s._v(" "),a("h3",{attrs:{id:"writing-a-failing-test"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#writing-a-failing-test"}},[s._v("#")]),s._v(" Writing a Failing Test")]),s._v(" "),a("p",[s._v("首先需要做一些准备工作：")]),s._v(" "),a("ul",[a("li",[s._v("我们要实现的功能是，在给定的文本中（可能来源于文件）查找指定的字符串，并打印出包含该字符串的文本行")]),s._v(" "),a("li",[s._v("因此先定义一个 "),a("code",[s._v("search")]),s._v(" 函数，接受两个参数：query 和 contents")]),s._v(" "),a("li",[s._v("同时，对 "),a("code",[s._v("seach")]),s._v(" 函数进行测试")]),s._v(" "),a("li",[s._v("另外，可以删除原代码中的 "),a("code",[s._v("println!")])])]),s._v(" "),a("p",[s._v("然后在 ````lib.rs`` 中增加 "),a("code",[s._v("search")]),s._v(" 函数原型：")]),s._v(" "),a("div",{staticClass:"language-rust line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-rust"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("pub")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fn")]),s._v(" search"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token lifetime-annotation symbol"}},[s._v("'a")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("query"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" contents"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),a("span",{pre:!0,attrs:{class:"token lifetime-annotation symbol"}},[s._v("'a")]),s._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("->")]),s._v(" Vec"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),a("span",{pre:!0,attrs:{class:"token lifetime-annotation symbol"}},[s._v("'a")]),s._v(" str"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("vec!")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("代码剖析：")]),s._v(" "),a("ul",[a("li",[s._v("先返回一个空的 "),a("code",[s._v("Vec")]),s._v(" ，也就是说先不做任何功能实现")]),s._v(" "),a("li",[s._v("由于 "),a("code",[s._v("Vec")]),s._v(" 中存储的是文本的某些行，因此需要使用 "),a("code",[s._v("'a")]),s._v(" 进行 lifetime 标注")])]),s._v(" "),a("p",[s._v("最后在 ````lib.rs`` 中增加测试函数:")]),s._v(" "),a("div",{staticClass:"language-rust line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-rust"}},[a("code",[a("span",{pre:!0,attrs:{class:"token attribute attr-name"}},[s._v("#[cfg(test)]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("mod")]),s._v(" tests "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("use")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("super")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("::")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token attribute attr-name"}},[s._v("#[test]")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fn")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("test_search")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" query "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"second"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" contents "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(' "\\\nline '),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" one"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\nline "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" second"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\nline "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" three"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v('"'),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("assert_eq!")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("vec!")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"line : second."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("search")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("query"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" contents"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br")])]),a("p",[s._v("代码剖析：")]),s._v(" "),a("ul",[a("li",[s._v("要查找的字符串是 "),a("code",[s._v("second")])]),s._v(" "),a("li",[s._v("给定的文本中有某些行包含这个字符串")]),s._v(" "),a("li",[s._v("因此使用 "),a("code",[s._v("assert_eq!")]),s._v(" 来校验，查找结果是否符合预期")])]),s._v(" "),a("p",[s._v("此时测试失败：")]),s._v(" "),a("div",{staticClass:"language-text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ cargo test\n\nrunning 1 test\ntest tests::test_search ... FAILED\n\nfailures:\n\n---- tests::test_search stdout ----\nthread 'tests::test_search' panicked at 'assertion failed: `(left == right)`\n\nleft: `[\"first line : second.\"]`,\nright: `[]`\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("h3",{attrs:{id:"writing-code-to-pass-the-test"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#writing-code-to-pass-the-test"}},[s._v("#")]),s._v(" Writing Code to Pass the Test")]),s._v(" "),a("p",[s._v("现在需要实现 "),a("code",[s._v("search")]),s._v(" 的功能，实现方式如下：")]),s._v(" "),a("ol",[a("li",[s._v("string 提供了 "),a("code",[s._v("lines")]),s._v(" 方法，可以枚举出文本中包含的行")]),s._v(" "),a("li",[s._v("因此，可以通过 "),a("code",[s._v("for")]),s._v(" 来循环文本中的每一行")]),s._v(" "),a("li",[s._v("针对每一行 string ，提供了 "),a("code",[s._v("contains")]),s._v(" 方法来判断是否存在某个字符串")]),s._v(" "),a("li",[s._v("对于包含指定字符串的行，通过 "),a("code",[s._v("Vec")]),s._v(" 的 "),a("code",[s._v("push")]),s._v(" 方法来进行存储")]),s._v(" "),a("li",[s._v("返回最后的 "),a("code",[s._v("Vec")])])]),s._v(" "),a("p",[s._v("因此，对 "),a("code",[s._v("search")]),s._v(" 函数完善实现如下：")]),s._v(" "),a("div",{staticClass:"language-rust line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-rust"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("pub")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fn")]),s._v(" search"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token lifetime-annotation symbol"}},[s._v("'a")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("query"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" contents"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),a("span",{pre:!0,attrs:{class:"token lifetime-annotation symbol"}},[s._v("'a")]),s._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("->")]),s._v(" Vec"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),a("span",{pre:!0,attrs:{class:"token lifetime-annotation symbol"}},[s._v("'a")]),s._v(" str"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 先声明 mut 的 Vec")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("mut")]),s._v(" results "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Vec"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("new")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// lines 产生 iterator")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" line "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" contents"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("lines")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// contains 判断 query 是否存在")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" line"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("contains")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("query"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// push 存储到 Vec 中")]),s._v("\n            results"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("push")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("line"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 返回 Vec")]),s._v("\n    results\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br")])]),a("p",[s._v("然后运行测试，看到测试通过：")]),s._v(" "),a("div",{staticClass:"language-text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ cargo test\n\nrunning 1 test\ntest tests::test_search ... ok\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h3",{attrs:{id:"refactoring-the-code"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#refactoring-the-code"}},[s._v("#")]),s._v(" Refactoring the Code")]),s._v(" "),a("p",[s._v("说明：")]),s._v(" "),a("ul",[a("li",[s._v("现在 "),a("code",[s._v("search")]),s._v(" 函数已经能正常工作")]),s._v(" "),a("li",[s._v("而 "),a("code",[s._v("run")]),s._v(" 函数完成了从文件中读取文本的工作")]),s._v(" "),a("li",[s._v("因此目前需要做的工作是，在 "),a("code",[s._v("run")]),s._v(" 中完成对 "),a("code",[s._v("search")]),s._v(" 的调用，传递的参数是：命令行参数中的 query ，以及从文件中读取到的文本")]),s._v(" "),a("li",[s._v("最后，"),a("code",[s._v("run")]),s._v(" 可以打印出 "),a("code",[s._v("search")]),s._v(" 得到的 "),a("code",[s._v("Vec")])])]),s._v(" "),a("p",[s._v("因此，"),a("code",[s._v("run")]),s._v(" 函数代码完善如下：")]),s._v(" "),a("div",{staticClass:"language-rust line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-rust"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("pub")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fn")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("cfg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Config"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("->")]),s._v(" Result"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" Box"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("dyn")]),s._v(" Error"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" contents "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" fs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("read_to_string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("cfg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("filename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 使用 for 来循环 Vec")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" line "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("search")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("cfg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("query"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("contents"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println!")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"{}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" line"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Ok")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("假设有文件 "),a("code",[s._v("test.txt")]),s._v(" ，内容如下：")]),s._v(" "),a("div",{staticClass:"language-text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("first line\n第二行 not end line.\n<end>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("运行程序：")]),s._v(" "),a("div",{staticClass:"language-text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ cargo run end test.txt\n\n第二行 not end line.\n<end>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h3",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[s._v("#")]),s._v(" 总结")]),s._v(" "),a("ol",[a("li",[a("em",[a("strong",[s._v("TDD")])]),s._v(" 的好处是，针对我们开发过程中涉及到的各个函数，都可以首先进行测试，确保功能可行，再集成到其它函数或模块中")]),s._v(" "),a("li",[s._v("例如本例子中涉及到的 "),a("code",[s._v("search")]),s._v(" 函数，如果直接开发并集成到 "),a("code",[s._v("run")]),s._v(" 函数中，那么直接运行程序时，如果发现存在问题，则很难查找是 "),a("code",[s._v("search")]),s._v(" 还是 "),a("code",[s._v("run")]),s._v(" 甚至 "),a("code",[s._v("main")]),s._v(" 的问题")]),s._v(" "),a("li",[s._v("一个庞大的程序总是由各种 module 和 function 组成的，遵循 "),a("em",[a("strong",[s._v("TDD")])]),s._v(" 的开发模式，可以确保测试与开发的同步进行，也就是说，达到了测试的高覆盖")])])])}),[],!1,null,null,null);t.default=e.exports}}]);